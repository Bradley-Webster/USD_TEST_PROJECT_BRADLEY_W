#usda 1.0
(
    defaultPrim = "Fighters_Base"
    metersPerUnit = 0.01
    upAxis = "Y"
)

def Xform "Fighters_Base" (
    kind = "component"
)
{
    def Xform "Fighter_1"
    {
        def Mesh "Top_L"
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.5, -0.33224624, -0.5000001), (0.5000001, 0.033726137, 0.49999994)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [16, 17, 55, 48, 17, 20, 54, 55, 20, 22, 53, 54, 19, 18, 32, 33, 18, 21, 39, 32, 21, 23, 38, 39, 25, 24, 47, 40, 24, 26, 46, 47, 26, 27, 45, 46, 0, 49, 50, 1, 1, 50, 51, 2, 2, 51, 52, 3, 4, 34, 35, 5, 5, 35, 36, 6, 6, 36, 37, 7, 8, 41, 42, 9, 9, 42, 43, 10, 10, 43, 44, 11, 0, 1, 17, 16, 49, 0, 16, 48, 1, 2, 20, 17, 2, 3, 22, 20, 3, 52, 53, 22, 34, 4, 19, 33, 7, 37, 38, 23, 13, 12, 29, 28, 41, 8, 25, 40, 14, 13, 28, 30, 11, 44, 45, 27, 15, 14, 30, 31, 33, 32, 24, 25, 8, 34, 33, 25, 35, 34, 8, 9, 36, 35, 9, 10, 37, 36, 10, 11, 38, 37, 11, 27, 39, 38, 27, 26, 32, 39, 26, 24, 12, 41, 40, 29, 42, 41, 12, 13, 43, 42, 13, 14, 44, 43, 14, 15, 45, 44, 15, 31, 46, 45, 31, 30, 47, 46, 30, 28, 40, 47, 28, 29, 4, 49, 48, 19, 50, 49, 4, 5, 51, 50, 5, 6, 52, 51, 6, 7, 53, 52, 7, 23, 54, 53, 23, 21, 55, 54, 21, 18, 48, 55, 18, 19]
            rel material:binding = </Fighters_Base/Looks/PaintSG>
            point3f[] points = [(-0.5, -0.33224624, 0.49999994), (-0.16666669, -0.33224624, 0.49999994), (0.16666675, -0.33224624, 0.49999994), (0.5000001, -0.33224624, 0.49999994), (-0.5, -0.016972007, 0.16666651), (-0.1666666, -0.0737783, 0.16666655), (0.16666675, -0.2675923, 0.16666651), (0.5000001, -0.24337417, 0.16666651), (-0.5, -0.016972007, -0.16666675), (-0.1666666, -0.0737783, -0.1666667), (0.16666675, -0.2675923, -0.16666675), (0.5000001, -0.24337417, -0.16666675), (-0.5, -0.33224618, -0.5000001), (-0.16666669, -0.33224618, -0.5000001), (0.16666675, -0.33224618, -0.5000001), (0.5000001, -0.33224618, -0.5000001), (-0.5, -0.31853262, 0.49999994), (-0.16666663, -0.31853262, 0.49999994), (-0.16666663, 0.0016106084, 0.16666651), (-0.5, 0.013713633, 0.16666651), (0.16666675, -0.31853262, 0.49999994), (0.16666675, -0.08453705, 0.16666651), (0.5000001, -0.31853262, 0.49999994), (0.5000001, -0.22966054, 0.16666651), (-0.16666663, 0.0016106084, -0.16666675), (-0.5, 0.013713633, -0.16666675), (0.16666675, -0.08453705, -0.16666675), (0.5000001, -0.22966054, -0.16666675), (-0.16666663, -0.31853256, -0.5000001), (-0.5, -0.31853256, -0.5000001), (0.16666675, -0.31853256, -0.5000001), (0.5000001, -0.31853256, -0.5000001), (-0.16666663, 0.021623114, -0.009746365), (-0.5, 0.033726137, -0.009746365), (-0.5, -9.126961e-8, -0.009746365), (-0.1666666, -0.0737783, -0.009746328), (0.16666675, -0.2675923, -0.009746365), (0.5000001, -0.24337417, -0.009746365), (0.5000001, -0.20964804, -0.009746365), (0.16666675, -0.064524546, -0.009746365), (-0.5, -0.1310243, -0.32927418), (-0.5, -0.15843691, -0.32562205), (-0.16666663, -0.19703281, -0.32562202), (0.16666675, -0.29842353, -0.32562205), (0.5000001, -0.2857542, -0.32562205), (0.5000001, -0.27204055, -0.32562205), (0.16666675, -0.1824226, -0.32927418), (-0.16666663, -0.1373558, -0.32927418), (-0.5, -0.12562421, 0.32385617), (-0.5, -0.1530368, 0.32020405), (-0.16666664, -0.19283186, 0.32020408), (0.16666675, -0.2973727, 0.32020405), (0.5000001, -0.28430974, 0.32020405), (0.5000001, -0.27059612, 0.32020405), (0.16666675, -0.1786194, 0.32385617), (-0.16666663, -0.13215244, 0.32385617)]
            color3f[] primvars:displayColor = [(0.13320851, 0, 0)] (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
            )
            float2[] primvars:st = [(0, 0), (0.33333334, 0), (0.33333334, 0.17979585), (0, 0.17979585), (0.6666667, 0), (0.6666667, 0.17979585), (1, 0), (1, 0.17979585), (0, 0.33333334), (0.33333334, 0.33333334), (0.33333334, 0.50974625), (0, 0.50974625), (0.6666667, 0.33333334), (0.6666667, 0.50974625), (1, 0.33333334), (1, 0.50974625), (0, 0.6666667), (0.33333334, 0.6666667), (0.3333333, 0.82562196), (0, 0.82562196), (0.6666667, 0.6666667), (0.6666666, 0.82562196), (1, 0.6666667), (1, 0.82562196), (0.33333334, 1), (0, 1), (0.6666667, 1), (1, 1)] (
                interpolation = "vertex"
            )
            int[] primvars:st:indices = [0, 1, 4, 6, 8, 9, 12, 14, 16, 17, 20, 22, 25, 24, 26, 27, 0, 1, 9, 8, 4, 12, 6, 14, 17, 16, 20, 22, 24, 25, 26, 27, 10, 11, 11, 10, 13, 15, 15, 13, 19, 19, 18, 21, 23, 23, 21, 18, 3, 3, 2, 5, 7, 7, 5, 2]
            float3 xformOp:scale = (2.2150302, 2.2150302, 3.2033617)
            double3 xformOp:translate = (2.5151614021680477, 1.5722242577749417, 4.532155246030747)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
        }

        def Mesh "Top_R"
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.5, -0.33224624, -0.5000001), (0.5000001, 0.033726137, 0.49999994)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [16, 17, 55, 48, 17, 20, 54, 55, 20, 22, 53, 54, 19, 18, 32, 33, 18, 21, 39, 32, 21, 23, 38, 39, 25, 24, 47, 40, 24, 26, 46, 47, 26, 27, 45, 46, 0, 49, 50, 1, 1, 50, 51, 2, 2, 51, 52, 3, 4, 34, 35, 5, 5, 35, 36, 6, 6, 36, 37, 7, 8, 41, 42, 9, 9, 42, 43, 10, 10, 43, 44, 11, 0, 1, 17, 16, 49, 0, 16, 48, 1, 2, 20, 17, 2, 3, 22, 20, 3, 52, 53, 22, 34, 4, 19, 33, 7, 37, 38, 23, 13, 12, 29, 28, 41, 8, 25, 40, 14, 13, 28, 30, 11, 44, 45, 27, 15, 14, 30, 31, 33, 32, 24, 25, 8, 34, 33, 25, 35, 34, 8, 9, 36, 35, 9, 10, 37, 36, 10, 11, 38, 37, 11, 27, 39, 38, 27, 26, 32, 39, 26, 24, 12, 41, 40, 29, 42, 41, 12, 13, 43, 42, 13, 14, 44, 43, 14, 15, 45, 44, 15, 31, 46, 45, 31, 30, 47, 46, 30, 28, 40, 47, 28, 29, 4, 49, 48, 19, 50, 49, 4, 5, 51, 50, 5, 6, 52, 51, 6, 7, 53, 52, 7, 23, 54, 53, 23, 21, 55, 54, 21, 18, 48, 55, 18, 19]
            rel material:binding = </Fighters_Base/Looks/PaintSG>
            point3f[] points = [(-0.5, -0.33224624, 0.49999994), (-0.16666669, -0.33224624, 0.49999994), (0.16666675, -0.33224624, 0.49999994), (0.5000001, -0.33224624, 0.49999994), (-0.5, -0.016972007, 0.16666651), (-0.1666666, -0.0737783, 0.16666655), (0.16666675, -0.2675923, 0.16666651), (0.5000001, -0.24337417, 0.16666651), (-0.5, -0.016972007, -0.16666675), (-0.1666666, -0.0737783, -0.1666667), (0.16666675, -0.2675923, -0.16666675), (0.5000001, -0.24337417, -0.16666675), (-0.5, -0.33224618, -0.5000001), (-0.16666669, -0.33224618, -0.5000001), (0.16666675, -0.33224618, -0.5000001), (0.5000001, -0.33224618, -0.5000001), (-0.5, -0.31853262, 0.49999994), (-0.16666663, -0.31853262, 0.49999994), (-0.16666663, 0.0016106084, 0.16666651), (-0.5, 0.013713633, 0.16666651), (0.16666675, -0.31853262, 0.49999994), (0.16666675, -0.08453705, 0.16666651), (0.5000001, -0.31853262, 0.49999994), (0.5000001, -0.22966054, 0.16666651), (-0.16666663, 0.0016106084, -0.16666675), (-0.5, 0.013713633, -0.16666675), (0.16666675, -0.08453705, -0.16666675), (0.5000001, -0.22966054, -0.16666675), (-0.16666663, -0.31853256, -0.5000001), (-0.5, -0.31853256, -0.5000001), (0.16666675, -0.31853256, -0.5000001), (0.5000001, -0.31853256, -0.5000001), (-0.16666663, 0.021623114, -0.009746365), (-0.5, 0.033726137, -0.009746365), (-0.5, -9.126961e-8, -0.009746365), (-0.1666666, -0.0737783, -0.009746328), (0.16666675, -0.2675923, -0.009746365), (0.5000001, -0.24337417, -0.009746365), (0.5000001, -0.20964804, -0.009746365), (0.16666675, -0.064524546, -0.009746365), (-0.5, -0.1310243, -0.32927418), (-0.5, -0.15843691, -0.32562205), (-0.16666663, -0.19703281, -0.32562202), (0.16666675, -0.29842353, -0.32562205), (0.5000001, -0.2857542, -0.32562205), (0.5000001, -0.27204055, -0.32562205), (0.16666675, -0.1824226, -0.32927418), (-0.16666663, -0.1373558, -0.32927418), (-0.5, -0.12562421, 0.32385617), (-0.5, -0.1530368, 0.32020405), (-0.16666664, -0.19283186, 0.32020408), (0.16666675, -0.2973727, 0.32020405), (0.5000001, -0.28430974, 0.32020405), (0.5000001, -0.27059612, 0.32020405), (0.16666675, -0.1786194, 0.32385617), (-0.16666663, -0.13215244, 0.32385617)]
            color3f[] primvars:displayColor = [(0.13320851, 0, 0)] (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
            )
            float2[] primvars:st = [(0, 0), (0.33333334, 0), (0.33333334, 0.17979585), (0, 0.17979585), (0.6666667, 0), (0.6666667, 0.17979585), (1, 0), (1, 0.17979585), (0, 0.33333334), (0.33333334, 0.33333334), (0.33333334, 0.50974625), (0, 0.50974625), (0.6666667, 0.33333334), (0.6666667, 0.50974625), (1, 0.33333334), (1, 0.50974625), (0, 0.6666667), (0.33333334, 0.6666667), (0.3333333, 0.82562196), (0, 0.82562196), (0.6666667, 0.6666667), (0.6666666, 0.82562196), (1, 0.6666667), (1, 0.82562196), (0.33333334, 1), (0, 1), (0.6666667, 1), (1, 1)] (
                interpolation = "vertex"
            )
            int[] primvars:st:indices = [0, 1, 4, 6, 8, 9, 12, 14, 16, 17, 20, 22, 25, 24, 26, 27, 0, 1, 9, 8, 4, 12, 6, 14, 17, 16, 20, 22, 24, 25, 26, 27, 10, 11, 11, 10, 13, 15, 15, 13, 19, 19, 18, 21, 23, 23, 21, 18, 3, 3, 2, 5, 7, 7, 5, 2]
            float3 xformOp:scale = (2.2150302, 2.2150302, 3.2033617)
            double3 xformOp:translate = (2.5151614021680477, 1.5722242577749417, -4.70924521437708)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
        }

        def Xform "Gun_Mount_L"
        {
            float3 xformOp:scale = (1, 0.5053312, 6.8219576)
            double3 xformOp:translate = (0, -0.25680032936348196, 0)
            float3 xformOp:translate:pivot = (-0.88894, 0.6409123, 4.7055182)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:scale", "!invert!xformOp:translate:pivot"]

            def Mesh "Mount_2"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                rel material:binding = </Fighters_Base/Looks/Comonents_DarkSG>
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.00035979215, 0.00035979215, 0.00035979215)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                float3 xformOp:scale = (1, 0.47918496, 0.12032684)
                double3 xformOp:translate = (-1.3499975182660988, 0.6409122665418043, 4.70551827549842)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
            }

            def Mesh "Mount_1"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                rel material:binding = </Fighters_Base/Looks/Comonents_DarkSG>
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.00035979215, 0.00035979215, 0.00035979215)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                float3 xformOp:scale = (1, 0.9482592, 0.01763817)
                double3 xformOp:translate = (-0.8889399812098926, 1.1490944681543196, 4.70551827549842)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
            }

            def Mesh "Gun_L"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-1, -0.96176887, -0.9510567), (1, 0.9999998, 0.9510565)]
                int[] faceVertexCounts = [4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 64, 65, 1, 2, 63, 64, 75, 63, 2, 74, 3, 62, 3, 4, 71, 62, 4, 5, 70, 71, 5, 6, 69, 70, 6, 7, 68, 69, 7, 8, 67, 68, 8, 9, 66, 67, 9, 0, 65, 66, 10, 11, 135, 136, 11, 12, 134, 135, 143, 144, 76, 13, 13, 14, 142, 143, 14, 15, 141, 142, 15, 16, 140, 141, 16, 17, 139, 140, 17, 18, 138, 139, 18, 19, 137, 138, 19, 10, 136, 137, 20, 21, 102, 103, 21, 22, 101, 102, 110, 111, 77, 23, 23, 24, 109, 110, 24, 25, 108, 109, 25, 26, 107, 108, 26, 27, 106, 107, 27, 28, 105, 106, 28, 29, 104, 105, 29, 20, 103, 104, 52, 51, 53, 54, 52, 53, 55, 72, 54, 53, 56, 55, 53, 57, 56, 53, 58, 57, 53, 59, 58, 53, 60, 59, 53, 61, 60, 53, 51, 61, 53, 30, 31, 40, 31, 32, 40, 32, 78, 33, 40, 33, 34, 40, 34, 35, 40, 35, 36, 40, 36, 37, 40, 37, 38, 40, 38, 39, 40, 39, 30, 40, 1, 0, 88, 79, 2, 1, 79, 80, 74, 2, 80, 89, 4, 3, 81, 82, 5, 4, 82, 83, 6, 5, 83, 84, 7, 6, 84, 85, 8, 7, 85, 86, 9, 8, 86, 87, 0, 9, 87, 88, 42, 41, 92, 93, 43, 42, 93, 94, 73, 43, 94, 100, 45, 44, 95, 96, 46, 45, 96, 97, 47, 46, 97, 98, 48, 47, 98, 99, 49, 48, 99, 90, 50, 49, 90, 91, 41, 50, 91, 92, 154, 155, 75, 62, 64, 63, 145, 146, 65, 64, 146, 147, 66, 65, 147, 148, 67, 66, 148, 149, 68, 67, 149, 150, 69, 68, 150, 151, 70, 69, 151, 152, 71, 70, 152, 153, 62, 71, 153, 154, 80, 79, 42, 43, 81, 89, 80, 43, 73, 44, 82, 81, 44, 45, 83, 82, 45, 46, 84, 83, 46, 47, 85, 84, 47, 48, 86, 85, 48, 49, 87, 86, 49, 50, 88, 87, 50, 41, 79, 88, 41, 42, 74, 89, 81, 3, 91, 90, 60, 61, 92, 91, 61, 51, 93, 92, 51, 52, 94, 93, 52, 54, 95, 100, 94, 54, 72, 55, 96, 95, 55, 56, 97, 96, 56, 57, 98, 97, 57, 58, 99, 98, 58, 59, 90, 99, 59, 60, 73, 100, 95, 44, 102, 101, 163, 164, 103, 102, 164, 165, 104, 103, 165, 156, 105, 104, 156, 157, 106, 105, 157, 158, 107, 106, 158, 159, 108, 107, 159, 160, 109, 108, 160, 161, 110, 109, 161, 162, 162, 166, 111, 110, 111, 101, 22, 77, 113, 112, 123, 124, 114, 113, 124, 125, 115, 114, 125, 126, 116, 115, 126, 127, 117, 116, 127, 128, 118, 117, 128, 129, 119, 118, 129, 130, 120, 119, 130, 131, 121, 120, 131, 132, 132, 133, 122, 121, 144, 134, 12, 76, 124, 123, 22, 21, 125, 124, 21, 20, 126, 125, 20, 29, 127, 126, 29, 28, 128, 127, 28, 27, 129, 128, 27, 26, 130, 129, 26, 25, 131, 130, 25, 24, 132, 131, 24, 23, 77, 22, 123, 133, 132, 23, 133, 123, 112, 122, 135, 134, 112, 113, 136, 135, 113, 114, 137, 136, 114, 115, 138, 137, 115, 116, 139, 138, 116, 117, 140, 139, 117, 118, 141, 140, 118, 119, 142, 141, 119, 120, 143, 142, 120, 121, 121, 122, 144, 143, 122, 112, 134, 144, 146, 145, 12, 11, 147, 146, 11, 10, 148, 147, 10, 19, 149, 148, 19, 18, 150, 149, 18, 17, 151, 150, 17, 16, 152, 151, 16, 15, 153, 152, 15, 14, 154, 153, 14, 13, 76, 12, 145, 155, 154, 13, 155, 145, 63, 75, 157, 156, 39, 38, 158, 157, 38, 37, 159, 158, 37, 36, 160, 159, 36, 35, 161, 160, 35, 34, 162, 161, 34, 33, 78, 32, 163, 166, 162, 33, 164, 163, 32, 31, 165, 164, 31, 30, 156, 165, 30, 39, 166, 163, 101, 111]
                rel material:binding = </Fighters_Base/Looks/ComponentsSG>
                point3f[] points = [(0.27605057, -0.9617688, -0.19834018), (0.10238457, -0.9617688, -0.32451534), (-0.103551865, -0.9617688, -0.31870008), (-0.2711029, -0.9617688, -0.1969676), (-0.33510208, -0.9617688, 0), (-0.2711029, -0.9617688, 0.19696689), (-0.103551865, -0.9617688, 0.31869984), (0.10355377, -0.9617688, 0.31869984), (0.2711048, -0.9617688, 0.19696689), (0.33510017, -0.9617688, 0), (0.2711048, 0.28178418, -0.1969676), (0.10355377, 0.28178418, -0.31870008), (-0.103551865, 0.28178418, -0.31870008), (-0.2711029, 0.28178418, -0.1969676), (-0.33510208, 0.28178418, 0), (-0.2711029, 0.28178418, 0.19696689), (-0.103551865, 0.28178418, 0.31869984), (0.10355377, 0.28178418, 0.31869984), (0.2711048, 0.28178418, 0.19696689), (0.33510017, 0.28178418, 0), (0.8090191, 0.3333333, -0.5877857), (0.30901718, 0.3333333, -0.9510567), (-0.30901718, 0.3333333, -0.9510567), (-0.8090172, 0.3333333, -0.58778524), (-1, 0.3333333, 0), (-0.8090172, 0.3333333, 0.5877851), (-0.30901718, 0.3333333, 0.9510565), (0.30901718, 0.3333333, 0.9510565), (0.8090191, 0.3333333, 0.5877851), (1, 0.3333333, 0), (0.8090191, 0.9999998, -0.5877857), (0.30901718, 0.9999998, -0.9510567), (-0.30901718, 0.9999998, -0.9510567), (-0.8090172, 0.9999998, -0.58778524), (-1, 0.9999998, 0), (-0.8090172, 0.9999998, 0.5877851), (-0.30901718, 0.9999998, 0.9510565), (0.30901718, 0.9999998, 0.9510565), (0.8090191, 0.9999998, 0.5877851), (1, 0.9999998, 0), (0, 0.9999998, 0), (0.22795677, -0.9617688, -0.16420364), (0.0848465, -0.9617688, -0.2681687), (-0.08669472, -0.9617688, -0.26416302), (-0.2259674, -0.9617688, -0.16288853), (-0.27931404, -0.9617688, 0.00079131126), (-0.22616959, -0.9617688, 0.16462255), (-0.08680153, -0.9617688, 0.2658646), (0.08542061, -0.9617688, 0.26575708), (0.22458076, -0.9617688, 0.16445303), (0.27783203, -0.9617688, 0.00068068504), (0.22795677, 0.1288827, -0.16420364), (0.0848465, 0.1288827, -0.2681687), (-0.004945755, 0.1288827, 0.0058147907), (-0.08669472, 0.1288827, -0.26416302), (-0.2259674, 0.1288827, -0.16288853), (-0.27931404, 0.1288827, 0.00079131126), (-0.22616959, 0.1288827, 0.16462255), (-0.08680153, 0.1288827, 0.2658646), (0.08542061, 0.1288827, 0.26575708), (0.22458076, 0.1288827, 0.16445303), (0.27783203, 0.1288827, 0.00068068504), (-0.2711029, -0.95851356, -0.1969676), (-0.103551865, -0.95851356, -0.31870008), (0.10238763, -0.95851356, -0.3245001), (0.27603763, -0.95851356, -0.19833659), (0.33510017, -0.95851356, 0), (0.2711048, -0.95851356, 0.19696689), (0.10355377, -0.95851356, 0.31869984), (-0.103551865, -0.95851356, 0.31869984), (-0.2711029, -0.95851356, 0.19696689), (-0.33510208, -0.95851356, 0), (-0.16766363, 0.1288827, -0.2052851), (-0.16766363, -0.9617688, -0.2052851), (-0.20096096, -0.9617688, -0.2479285), (-0.20096096, -0.95851356, -0.2479285), (-0.20096096, 0.28178418, -0.2479285), (-0.599702, 0.3333333, -0.7398617), (-0.599702, 0.99999976, -0.7398617), (0.09477638, -0.96176887, -0.3000716), (-0.09623906, -0.96176887, -0.29504132), (-0.25152266, -0.96176887, -0.18218374), (-0.31090066, -0.96176887, 0.00034327898), (-0.25161037, -0.96176887, 0.18293558), (-0.0962854, -0.96176887, 0.29577938), (0.09568742, -0.96176887, 0.29573274), (0.2509222, -0.96176887, 0.18286204), (0.31025666, -0.96176887, 0.0002952882), (0.25518698, -0.96176887, -0.1835314), (-0.17388086, -0.96176887, -0.23861253), (0.22458076, -0.95831466, 0.16445303), (0.277832, -0.95831466, 0.000680685), (0.22795677, -0.95831466, -0.16420364), (0.0848465, -0.95831466, -0.2681687), (-0.08669472, -0.95831466, -0.26416302), (-0.2259674, -0.95831466, -0.16288851), (-0.27931404, -0.95831466, 0.0007913112), (-0.22616959, -0.95831466, 0.16462255), (-0.08680153, -0.95831466, 0.2658646), (0.08542061, -0.95831466, 0.26575708), (-0.15633106, -0.95831466, -0.21352577), (-0.30901718, 0.3403223, -0.9510567), (0.30901718, 0.3403223, -0.9510567), (0.8090191, 0.3403223, -0.5877857), (1, 0.3403223, 0), (0.8090191, 0.3403223, 0.5877851), (0.30901718, 0.3403223, 0.9510565), (-0.30901718, 0.3403223, 0.9510565), (-0.8090172, 0.3403223, 0.5877851), (-1, 0.3403223, 0), (-0.8090172, 0.3403223, -0.58778524), (-0.5590172, 0.3403223, -0.769421), (-0.21168806, 0.30891442, -0.65150875), (0.21168895, 0.30891442, -0.65150875), (0.5542085, 0.30891442, -0.40265477), (0.6850363, 0.30891442, 0), (0.5542085, 0.30891442, 0.40265414), (0.21168895, 0.30891442, 0.6515085), (-0.21168806, 0.30891442, 0.6515085), (-0.55420667, 0.30891442, 0.40265414), (-0.6850372, 0.30891442, 0), (-0.55420667, 0.30891442, -0.40265453), (-0.38294736, 0.30891442, -0.5270816), (-0.25395614, 0.31951904, -0.7815964), (0.25395662, 0.31951904, -0.7815964), (0.66486764, 0.31951904, -0.48305342), (0.8218187, 0.31951904, 0), (0.66486764, 0.31951904, 0.4830528), (0.25395662, 0.31951904, 0.7815961), (-0.25395614, 0.31951904, 0.7815961), (-0.66486573, 0.31951904, 0.4830528), (-0.8218192, 0.31951904, 0), (-0.66486573, 0.31951904, -0.4830531), (-0.45941094, 0.31951904, -0.63232476), (-0.15760021, 0.29534435, -0.48504364), (0.15760161, 0.29534435, -0.48504364), (0.41260493, 0.29534435, -0.2997736), (0.5100043, 0.29534435, 0), (0.41260493, 0.29534435, 0.29977295), (0.15760161, 0.29534435, 0.4850434), (-0.15760021, 0.29534435, 0.4850434), (-0.41260308, 0.29534435, 0.29977295), (-0.5100057, 0.29534435, 0), (-0.41260308, 0.29534435, -0.29977348), (-0.2919209, 0.29534435, -0.38745403), (-0.103551865, 0.2533297, -0.31870008), (0.103527024, 0.2533297, -0.31883314), (0.27121797, 0.2533297, -0.19699901), (0.33510017, 0.2533297, 0), (0.2711048, 0.2533297, 0.19696689), (0.10355377, 0.2533297, 0.31869984), (-0.103551865, 0.2533297, 0.31869984), (-0.2711029, 0.2533297, 0.19696689), (-0.33510208, 0.2533297, 0), (-0.2711029, 0.2533297, -0.1969676), (-0.18732738, 0.2533297, -0.25783384), (1, 0.98187983, 0), (0.8090191, 0.98187983, 0.5877851), (0.30901718, 0.98187983, 0.9510565), (-0.30901718, 0.98187983, 0.9510565), (-0.8090172, 0.98187983, 0.5877851), (-1, 0.98187983, 0), (-0.8090172, 0.98187983, -0.58778524), (-0.30901718, 0.98187983, -0.9510567), (0.30901718, 0.98187983, -0.9510567), (0.8090191, 0.98187983, -0.5877857), (-0.5590172, 0.98187983, -0.769421)]
                color3f[] primvars:displayColor = [(0.0056499722, 0.0056499722, 0.0056499722)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0.3125), (0.4, 0.3125), (0.40000004, 0.31282803), (0.37500003, 0.31282803), (0.425, 0.3125), (0.425, 0.31282803), (0.43953425, 0.31282803), (0.43953425, 0.3125), (0.45000002, 0.3125), (0.45000002, 0.31282803), (0.47500002, 0.3125), (0.47500002, 0.31282803), (0.5, 0.3125), (0.5, 0.31282803), (0.525, 0.3125), (0.525, 0.31282803), (0.54999995, 0.3125), (0.54999995, 0.31282803), (0.5749999, 0.3125), (0.5749999, 0.31282803), (0.5999999, 0.3125), (0.5999999, 0.31282803), (0.6249999, 0.3125), (0.6249999, 0.31282803), (0.375, 0.43781328), (0.4, 0.43781328), (0.40000004, 0.47077733), (0.375, 0.47077733), (0.425, 0.43781328), (0.425, 0.47077733), (0.45000005, 0.47077733), (0.43851748, 0.47077733), (0.43953425, 0.43781328), (0.45000002, 0.43781328), (0.47500002, 0.43781328), (0.47500002, 0.47077733), (0.5, 0.43781328), (0.5, 0.47077733), (0.525, 0.43781328), (0.525, 0.47077733), (0.54999995, 0.43781328), (0.54999995, 0.47077733), (0.5749999, 0.43781328), (0.5749999, 0.47077733), (0.5999999, 0.43781328), (0.5999999, 0.47077733), (0.6249999, 0.43781328), (0.6249999, 0.47077733), (0.375, 0.56312656), (0.4, 0.56312656), (0.4, 0.5644403), (0.375, 0.5644403), (0.425, 0.56312656), (0.425, 0.5644403), (0.45000002, 0.5644403), (0.4375, 0.5644403), (0.43953425, 0.56312656), (0.45000002, 0.56312656), (0.47500002, 0.56312656), (0.47500002, 0.5644403), (0.5, 0.56312656), (0.5, 0.5644403), (0.525, 0.56312656), (0.525, 0.5644403), (0.54999995, 0.56312656), (0.54999995, 0.5644403), (0.5749999, 0.56312656), (0.5749999, 0.5644403), (0.5999999, 0.56312656), (0.5999999, 0.5644403), (0.6249999, 0.56312656), (0.6249999, 0.5644403), (0.5482839, 0.007647395), (0.62640893, 0.064408526), (0.5, 0.15), (0.45171607, 0.00764741), (0.37359107, 0.064408556), (0.40629655, 0.04064662), (0.34375, 0.15625), (0.37359107, 0.24809146), (0.4517161, 0.3048526), (0.54828393, 0.3048526), (0.62640893, 0.24809146), (0.65625, 0.15625), (0.62640893, 0.93559146), (0.54828393, 0.9923526), (0.5, 0.8375), (0.4517161, 0.9923526), (0.40629655, 0.9593534), (0.37359107, 0.93559146), (0.34375, 0.84375), (0.37359107, 0.75190854), (0.45171607, 0.6951474), (0.5482839, 0.6951474), (0.62640893, 0.75190854), (0.65625, 0.84375), (0.41265357, 0.036027983), (0.6264089, 0.064408526), (0.5482838, 0.007647395), (0.34374997, 0.15625), (0.5482839, 0.3048526), (0.6264089, 0.24809146), (0.45000002, 0.4349459), (0.4375, 0.4349459), (0.425, 0.4349459), (0.4, 0.4349459), (0.375, 0.4349459), (0.6249999, 0.4349459), (0.5999999, 0.4349459), (0.5749999, 0.4349459), (0.54999995, 0.4349459), (0.525, 0.4349459), (0.5, 0.4349459), (0.47500002, 0.4349459), (0.425, 0.6850338), (0.4, 0.6850338), (0.375, 0.6850338), (0.6249999, 0.6850338), (0.5999999, 0.6850338), (0.5749999, 0.6850338), (0.54999995, 0.6850338), (0.525, 0.6850338), (0.5, 0.6850338), (0.47500002, 0.6850338), (0.45000002, 0.6850338), (0.4375, 0.6850338), (0.4, 0.5037655), (0.425, 0.5037655), (0.425, 0.52954483), (0.4, 0.52954483), (0.375, 0.5037655), (0.375, 0.52954483), (0.5999999, 0.5037655), (0.6249999, 0.5037655), (0.6249999, 0.52954483), (0.5999999, 0.52954483), (0.5749999, 0.5037655), (0.5749999, 0.52954483), (0.54999995, 0.5037655), (0.54999995, 0.52954483), (0.525, 0.5037655), (0.525, 0.52954483), (0.5, 0.5037655), (0.5, 0.52954483), (0.47500002, 0.5037655), (0.47500002, 0.52954483), (0.45000002, 0.5037655), (0.45, 0.52954483), (0.4375, 0.52954483), (0.4375, 0.5037655), (0.5999999, 0.68843985), (0.5749999, 0.68843985), (0.54999995, 0.68843985), (0.525, 0.68843985), (0.5, 0.68843985), (0.47500002, 0.68843985), (0.45000002, 0.68843985), (0.43953425, 0.68843985), (0.425, 0.68843985), (0.4, 0.68843985), (0.375, 0.68843985), (0.6249999, 0.68843985)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 6, 5, 4, 7, 8, 9, 8, 10, 11, 9, 10, 12, 13, 11, 12, 14, 15, 13, 14, 16, 17, 15, 16, 18, 19, 17, 18, 20, 21, 19, 20, 22, 23, 21, 24, 25, 26, 27, 25, 28, 29, 26, 30, 31, 32, 33, 33, 34, 35, 30, 34, 36, 37, 35, 36, 38, 39, 37, 38, 40, 41, 39, 40, 42, 43, 41, 42, 44, 45, 43, 44, 46, 47, 45, 48, 49, 50, 51, 49, 52, 53, 50, 54, 55, 56, 57, 57, 58, 59, 54, 58, 60, 61, 59, 60, 62, 63, 61, 62, 64, 65, 63, 64, 66, 67, 65, 66, 68, 69, 67, 68, 70, 71, 69, 72, 73, 74, 75, 72, 74, 76, 77, 75, 74, 78, 76, 74, 79, 78, 74, 80, 79, 74, 81, 80, 74, 82, 81, 74, 83, 82, 74, 73, 83, 74, 84, 85, 86, 85, 87, 86, 87, 88, 89, 86, 89, 90, 86, 90, 91, 86, 91, 92, 86, 92, 93, 86, 93, 94, 86, 94, 95, 86, 95, 84, 86, 72, 73, 73, 72, 75, 72, 72, 75, 77, 75, 75, 96, 78, 76, 76, 78, 79, 78, 78, 79, 80, 79, 79, 80, 81, 80, 80, 81, 82, 81, 81, 82, 83, 82, 82, 83, 73, 83, 83, 73, 72, 73, 97, 98, 75, 72, 98, 75, 77, 75, 75, 96, 78, 76, 76, 99, 79, 78, 99, 79, 80, 79, 79, 80, 81, 80, 80, 100, 82, 81, 100, 101, 83, 82, 101, 83, 73, 83, 83, 97, 102, 103, 6, 9, 2, 5, 104, 105, 3, 2, 105, 106, 21, 23, 107, 108, 19, 21, 108, 109, 17, 19, 109, 110, 15, 17, 110, 111, 13, 15, 111, 112, 11, 13, 112, 113, 9, 11, 113, 102, 75, 72, 72, 75, 76, 96, 75, 75, 77, 76, 78, 76, 76, 78, 79, 78, 78, 79, 80, 79, 79, 80, 81, 80, 80, 81, 82, 81, 81, 82, 83, 82, 82, 83, 73, 83, 83, 73, 72, 73, 73, 72, 77, 96, 76, 76, 83, 101, 82, 83, 97, 83, 83, 73, 98, 97, 73, 72, 75, 98, 72, 75, 76, 96, 75, 75, 77, 76, 99, 76, 76, 78, 79, 99, 78, 79, 80, 79, 79, 80, 100, 80, 80, 81, 101, 100, 81, 82, 77, 96, 76, 76, 50, 53, 114, 115, 51, 50, 115, 116, 69, 71, 117, 118, 67, 69, 118, 119, 65, 67, 119, 120, 63, 65, 120, 121, 61, 63, 121, 122, 59, 61, 122, 123, 54, 59, 123, 124, 124, 125, 55, 54, 55, 53, 52, 56, 126, 127, 128, 129, 130, 126, 129, 131, 132, 133, 134, 135, 136, 132, 135, 137, 138, 136, 137, 139, 140, 138, 139, 141, 142, 140, 141, 143, 144, 142, 143, 145, 146, 144, 145, 147, 147, 148, 149, 146, 31, 29, 28, 32, 129, 128, 52, 49, 131, 129, 49, 48, 135, 134, 70, 68, 137, 135, 68, 66, 139, 137, 66, 64, 141, 139, 64, 62, 143, 141, 62, 60, 145, 143, 60, 58, 147, 145, 58, 57, 56, 52, 128, 148, 147, 57, 148, 128, 127, 149, 26, 29, 127, 126, 27, 26, 126, 130, 45, 47, 133, 132, 43, 45, 132, 136, 41, 43, 136, 138, 39, 41, 138, 140, 37, 39, 140, 142, 35, 37, 142, 144, 30, 35, 144, 146, 146, 149, 31, 30, 149, 127, 29, 31, 105, 104, 28, 25, 106, 105, 25, 24, 108, 107, 46, 44, 109, 108, 44, 42, 110, 109, 42, 40, 111, 110, 40, 38, 112, 111, 38, 36, 113, 112, 36, 34, 102, 113, 34, 33, 32, 28, 104, 103, 102, 33, 103, 104, 5, 6, 119, 118, 150, 151, 120, 119, 151, 152, 121, 120, 152, 153, 122, 121, 153, 154, 123, 122, 154, 155, 124, 123, 155, 156, 157, 158, 114, 125, 124, 156, 115, 114, 158, 159, 116, 115, 159, 160, 118, 117, 161, 150, 125, 114, 53, 55]
                float3 xformOp:rotateXYZ = (90, 90, 0)
                float3 xformOp:scale = (0.024092464, 2.1872163, 0.32524762)
                double3 xformOp:translate = (-3.039193802034866, 0.6367939934777523, 4.753578868743612)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "Gun_R"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-1, -0.96176887, -0.9510567), (1, 0.9999998, 0.9510565)]
                int[] faceVertexCounts = [4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 64, 65, 1, 2, 63, 64, 75, 63, 2, 74, 3, 62, 3, 4, 71, 62, 4, 5, 70, 71, 5, 6, 69, 70, 6, 7, 68, 69, 7, 8, 67, 68, 8, 9, 66, 67, 9, 0, 65, 66, 10, 11, 135, 136, 11, 12, 134, 135, 143, 144, 76, 13, 13, 14, 142, 143, 14, 15, 141, 142, 15, 16, 140, 141, 16, 17, 139, 140, 17, 18, 138, 139, 18, 19, 137, 138, 19, 10, 136, 137, 20, 21, 102, 103, 21, 22, 101, 102, 110, 111, 77, 23, 23, 24, 109, 110, 24, 25, 108, 109, 25, 26, 107, 108, 26, 27, 106, 107, 27, 28, 105, 106, 28, 29, 104, 105, 29, 20, 103, 104, 52, 51, 53, 54, 52, 53, 55, 72, 54, 53, 56, 55, 53, 57, 56, 53, 58, 57, 53, 59, 58, 53, 60, 59, 53, 61, 60, 53, 51, 61, 53, 30, 31, 40, 31, 32, 40, 32, 78, 33, 40, 33, 34, 40, 34, 35, 40, 35, 36, 40, 36, 37, 40, 37, 38, 40, 38, 39, 40, 39, 30, 40, 1, 0, 88, 79, 2, 1, 79, 80, 74, 2, 80, 89, 4, 3, 81, 82, 5, 4, 82, 83, 6, 5, 83, 84, 7, 6, 84, 85, 8, 7, 85, 86, 9, 8, 86, 87, 0, 9, 87, 88, 42, 41, 92, 93, 43, 42, 93, 94, 73, 43, 94, 100, 45, 44, 95, 96, 46, 45, 96, 97, 47, 46, 97, 98, 48, 47, 98, 99, 49, 48, 99, 90, 50, 49, 90, 91, 41, 50, 91, 92, 154, 155, 75, 62, 64, 63, 145, 146, 65, 64, 146, 147, 66, 65, 147, 148, 67, 66, 148, 149, 68, 67, 149, 150, 69, 68, 150, 151, 70, 69, 151, 152, 71, 70, 152, 153, 62, 71, 153, 154, 80, 79, 42, 43, 81, 89, 80, 43, 73, 44, 82, 81, 44, 45, 83, 82, 45, 46, 84, 83, 46, 47, 85, 84, 47, 48, 86, 85, 48, 49, 87, 86, 49, 50, 88, 87, 50, 41, 79, 88, 41, 42, 74, 89, 81, 3, 91, 90, 60, 61, 92, 91, 61, 51, 93, 92, 51, 52, 94, 93, 52, 54, 95, 100, 94, 54, 72, 55, 96, 95, 55, 56, 97, 96, 56, 57, 98, 97, 57, 58, 99, 98, 58, 59, 90, 99, 59, 60, 73, 100, 95, 44, 102, 101, 163, 164, 103, 102, 164, 165, 104, 103, 165, 156, 105, 104, 156, 157, 106, 105, 157, 158, 107, 106, 158, 159, 108, 107, 159, 160, 109, 108, 160, 161, 110, 109, 161, 162, 162, 166, 111, 110, 111, 101, 22, 77, 113, 112, 123, 124, 114, 113, 124, 125, 115, 114, 125, 126, 116, 115, 126, 127, 117, 116, 127, 128, 118, 117, 128, 129, 119, 118, 129, 130, 120, 119, 130, 131, 121, 120, 131, 132, 132, 133, 122, 121, 144, 134, 12, 76, 124, 123, 22, 21, 125, 124, 21, 20, 126, 125, 20, 29, 127, 126, 29, 28, 128, 127, 28, 27, 129, 128, 27, 26, 130, 129, 26, 25, 131, 130, 25, 24, 132, 131, 24, 23, 77, 22, 123, 133, 132, 23, 133, 123, 112, 122, 135, 134, 112, 113, 136, 135, 113, 114, 137, 136, 114, 115, 138, 137, 115, 116, 139, 138, 116, 117, 140, 139, 117, 118, 141, 140, 118, 119, 142, 141, 119, 120, 143, 142, 120, 121, 121, 122, 144, 143, 122, 112, 134, 144, 146, 145, 12, 11, 147, 146, 11, 10, 148, 147, 10, 19, 149, 148, 19, 18, 150, 149, 18, 17, 151, 150, 17, 16, 152, 151, 16, 15, 153, 152, 15, 14, 154, 153, 14, 13, 76, 12, 145, 155, 154, 13, 155, 145, 63, 75, 157, 156, 39, 38, 158, 157, 38, 37, 159, 158, 37, 36, 160, 159, 36, 35, 161, 160, 35, 34, 162, 161, 34, 33, 78, 32, 163, 166, 162, 33, 164, 163, 32, 31, 165, 164, 31, 30, 156, 165, 30, 39, 166, 163, 101, 111]
                rel material:binding = </Fighters_Base/Looks/ComponentsSG>
                point3f[] points = [(0.27605057, -0.9617688, -0.19834018), (0.10238457, -0.9617688, -0.32451534), (-0.103551865, -0.9617688, -0.31870008), (-0.2711029, -0.9617688, -0.1969676), (-0.33510208, -0.9617688, 0), (-0.2711029, -0.9617688, 0.19696689), (-0.103551865, -0.9617688, 0.31869984), (0.10355377, -0.9617688, 0.31869984), (0.2711048, -0.9617688, 0.19696689), (0.33510017, -0.9617688, 0), (0.2711048, 0.28178418, -0.1969676), (0.10355377, 0.28178418, -0.31870008), (-0.103551865, 0.28178418, -0.31870008), (-0.2711029, 0.28178418, -0.1969676), (-0.33510208, 0.28178418, 0), (-0.2711029, 0.28178418, 0.19696689), (-0.103551865, 0.28178418, 0.31869984), (0.10355377, 0.28178418, 0.31869984), (0.2711048, 0.28178418, 0.19696689), (0.33510017, 0.28178418, 0), (0.8090191, 0.3333333, -0.5877857), (0.30901718, 0.3333333, -0.9510567), (-0.30901718, 0.3333333, -0.9510567), (-0.8090172, 0.3333333, -0.58778524), (-1, 0.3333333, 0), (-0.8090172, 0.3333333, 0.5877851), (-0.30901718, 0.3333333, 0.9510565), (0.30901718, 0.3333333, 0.9510565), (0.8090191, 0.3333333, 0.5877851), (1, 0.3333333, 0), (0.8090191, 0.9999998, -0.5877857), (0.30901718, 0.9999998, -0.9510567), (-0.30901718, 0.9999998, -0.9510567), (-0.8090172, 0.9999998, -0.58778524), (-1, 0.9999998, 0), (-0.8090172, 0.9999998, 0.5877851), (-0.30901718, 0.9999998, 0.9510565), (0.30901718, 0.9999998, 0.9510565), (0.8090191, 0.9999998, 0.5877851), (1, 0.9999998, 0), (0, 0.9999998, 0), (0.22795677, -0.9617688, -0.16420364), (0.0848465, -0.9617688, -0.2681687), (-0.08669472, -0.9617688, -0.26416302), (-0.2259674, -0.9617688, -0.16288853), (-0.27931404, -0.9617688, 0.00079131126), (-0.22616959, -0.9617688, 0.16462255), (-0.08680153, -0.9617688, 0.2658646), (0.08542061, -0.9617688, 0.26575708), (0.22458076, -0.9617688, 0.16445303), (0.27783203, -0.9617688, 0.00068068504), (0.22795677, 0.1288827, -0.16420364), (0.0848465, 0.1288827, -0.2681687), (-0.004945755, 0.1288827, 0.0058147907), (-0.08669472, 0.1288827, -0.26416302), (-0.2259674, 0.1288827, -0.16288853), (-0.27931404, 0.1288827, 0.00079131126), (-0.22616959, 0.1288827, 0.16462255), (-0.08680153, 0.1288827, 0.2658646), (0.08542061, 0.1288827, 0.26575708), (0.22458076, 0.1288827, 0.16445303), (0.27783203, 0.1288827, 0.00068068504), (-0.2711029, -0.95851356, -0.1969676), (-0.103551865, -0.95851356, -0.31870008), (0.10238763, -0.95851356, -0.3245001), (0.27603763, -0.95851356, -0.19833659), (0.33510017, -0.95851356, 0), (0.2711048, -0.95851356, 0.19696689), (0.10355377, -0.95851356, 0.31869984), (-0.103551865, -0.95851356, 0.31869984), (-0.2711029, -0.95851356, 0.19696689), (-0.33510208, -0.95851356, 0), (-0.16766363, 0.1288827, -0.2052851), (-0.16766363, -0.9617688, -0.2052851), (-0.20096096, -0.9617688, -0.2479285), (-0.20096096, -0.95851356, -0.2479285), (-0.20096096, 0.28178418, -0.2479285), (-0.599702, 0.3333333, -0.7398617), (-0.599702, 0.99999976, -0.7398617), (0.09477638, -0.96176887, -0.3000716), (-0.09623906, -0.96176887, -0.29504132), (-0.25152266, -0.96176887, -0.18218374), (-0.31090066, -0.96176887, 0.00034327898), (-0.25161037, -0.96176887, 0.18293558), (-0.0962854, -0.96176887, 0.29577938), (0.09568742, -0.96176887, 0.29573274), (0.2509222, -0.96176887, 0.18286204), (0.31025666, -0.96176887, 0.0002952882), (0.25518698, -0.96176887, -0.1835314), (-0.17388086, -0.96176887, -0.23861253), (0.22458076, -0.95831466, 0.16445303), (0.277832, -0.95831466, 0.000680685), (0.22795677, -0.95831466, -0.16420364), (0.0848465, -0.95831466, -0.2681687), (-0.08669472, -0.95831466, -0.26416302), (-0.2259674, -0.95831466, -0.16288851), (-0.27931404, -0.95831466, 0.0007913112), (-0.22616959, -0.95831466, 0.16462255), (-0.08680153, -0.95831466, 0.2658646), (0.08542061, -0.95831466, 0.26575708), (-0.15633106, -0.95831466, -0.21352577), (-0.30901718, 0.3403223, -0.9510567), (0.30901718, 0.3403223, -0.9510567), (0.8090191, 0.3403223, -0.5877857), (1, 0.3403223, 0), (0.8090191, 0.3403223, 0.5877851), (0.30901718, 0.3403223, 0.9510565), (-0.30901718, 0.3403223, 0.9510565), (-0.8090172, 0.3403223, 0.5877851), (-1, 0.3403223, 0), (-0.8090172, 0.3403223, -0.58778524), (-0.5590172, 0.3403223, -0.769421), (-0.21168806, 0.30891442, -0.65150875), (0.21168895, 0.30891442, -0.65150875), (0.5542085, 0.30891442, -0.40265477), (0.6850363, 0.30891442, 0), (0.5542085, 0.30891442, 0.40265414), (0.21168895, 0.30891442, 0.6515085), (-0.21168806, 0.30891442, 0.6515085), (-0.55420667, 0.30891442, 0.40265414), (-0.6850372, 0.30891442, 0), (-0.55420667, 0.30891442, -0.40265453), (-0.38294736, 0.30891442, -0.5270816), (-0.25395614, 0.31951904, -0.7815964), (0.25395662, 0.31951904, -0.7815964), (0.66486764, 0.31951904, -0.48305342), (0.8218187, 0.31951904, 0), (0.66486764, 0.31951904, 0.4830528), (0.25395662, 0.31951904, 0.7815961), (-0.25395614, 0.31951904, 0.7815961), (-0.66486573, 0.31951904, 0.4830528), (-0.8218192, 0.31951904, 0), (-0.66486573, 0.31951904, -0.4830531), (-0.45941094, 0.31951904, -0.63232476), (-0.15760021, 0.29534435, -0.48504364), (0.15760161, 0.29534435, -0.48504364), (0.41260493, 0.29534435, -0.2997736), (0.5100043, 0.29534435, 0), (0.41260493, 0.29534435, 0.29977295), (0.15760161, 0.29534435, 0.4850434), (-0.15760021, 0.29534435, 0.4850434), (-0.41260308, 0.29534435, 0.29977295), (-0.5100057, 0.29534435, 0), (-0.41260308, 0.29534435, -0.29977348), (-0.2919209, 0.29534435, -0.38745403), (-0.103551865, 0.2533297, -0.31870008), (0.103527024, 0.2533297, -0.31883314), (0.27121797, 0.2533297, -0.19699901), (0.33510017, 0.2533297, 0), (0.2711048, 0.2533297, 0.19696689), (0.10355377, 0.2533297, 0.31869984), (-0.103551865, 0.2533297, 0.31869984), (-0.2711029, 0.2533297, 0.19696689), (-0.33510208, 0.2533297, 0), (-0.2711029, 0.2533297, -0.1969676), (-0.18732738, 0.2533297, -0.25783384), (1, 0.98187983, 0), (0.8090191, 0.98187983, 0.5877851), (0.30901718, 0.98187983, 0.9510565), (-0.30901718, 0.98187983, 0.9510565), (-0.8090172, 0.98187983, 0.5877851), (-1, 0.98187983, 0), (-0.8090172, 0.98187983, -0.58778524), (-0.30901718, 0.98187983, -0.9510567), (0.30901718, 0.98187983, -0.9510567), (0.8090191, 0.98187983, -0.5877857), (-0.5590172, 0.98187983, -0.769421)]
                color3f[] primvars:displayColor = [(0.0056499722, 0.0056499722, 0.0056499722)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0.3125), (0.4, 0.3125), (0.40000004, 0.31282803), (0.37500003, 0.31282803), (0.425, 0.3125), (0.425, 0.31282803), (0.43953425, 0.31282803), (0.43953425, 0.3125), (0.45000002, 0.3125), (0.45000002, 0.31282803), (0.47500002, 0.3125), (0.47500002, 0.31282803), (0.5, 0.3125), (0.5, 0.31282803), (0.525, 0.3125), (0.525, 0.31282803), (0.54999995, 0.3125), (0.54999995, 0.31282803), (0.5749999, 0.3125), (0.5749999, 0.31282803), (0.5999999, 0.3125), (0.5999999, 0.31282803), (0.6249999, 0.3125), (0.6249999, 0.31282803), (0.375, 0.43781328), (0.4, 0.43781328), (0.40000004, 0.47077733), (0.375, 0.47077733), (0.425, 0.43781328), (0.425, 0.47077733), (0.45000005, 0.47077733), (0.43851748, 0.47077733), (0.43953425, 0.43781328), (0.45000002, 0.43781328), (0.47500002, 0.43781328), (0.47500002, 0.47077733), (0.5, 0.43781328), (0.5, 0.47077733), (0.525, 0.43781328), (0.525, 0.47077733), (0.54999995, 0.43781328), (0.54999995, 0.47077733), (0.5749999, 0.43781328), (0.5749999, 0.47077733), (0.5999999, 0.43781328), (0.5999999, 0.47077733), (0.6249999, 0.43781328), (0.6249999, 0.47077733), (0.375, 0.56312656), (0.4, 0.56312656), (0.4, 0.5644403), (0.375, 0.5644403), (0.425, 0.56312656), (0.425, 0.5644403), (0.45000002, 0.5644403), (0.4375, 0.5644403), (0.43953425, 0.56312656), (0.45000002, 0.56312656), (0.47500002, 0.56312656), (0.47500002, 0.5644403), (0.5, 0.56312656), (0.5, 0.5644403), (0.525, 0.56312656), (0.525, 0.5644403), (0.54999995, 0.56312656), (0.54999995, 0.5644403), (0.5749999, 0.56312656), (0.5749999, 0.5644403), (0.5999999, 0.56312656), (0.5999999, 0.5644403), (0.6249999, 0.56312656), (0.6249999, 0.5644403), (0.5482839, 0.007647395), (0.62640893, 0.064408526), (0.5, 0.15), (0.45171607, 0.00764741), (0.37359107, 0.064408556), (0.40629655, 0.04064662), (0.34375, 0.15625), (0.37359107, 0.24809146), (0.4517161, 0.3048526), (0.54828393, 0.3048526), (0.62640893, 0.24809146), (0.65625, 0.15625), (0.62640893, 0.93559146), (0.54828393, 0.9923526), (0.5, 0.8375), (0.4517161, 0.9923526), (0.40629655, 0.9593534), (0.37359107, 0.93559146), (0.34375, 0.84375), (0.37359107, 0.75190854), (0.45171607, 0.6951474), (0.5482839, 0.6951474), (0.62640893, 0.75190854), (0.65625, 0.84375), (0.41265357, 0.036027983), (0.6264089, 0.064408526), (0.5482838, 0.007647395), (0.34374997, 0.15625), (0.5482839, 0.3048526), (0.6264089, 0.24809146), (0.45000002, 0.4349459), (0.4375, 0.4349459), (0.425, 0.4349459), (0.4, 0.4349459), (0.375, 0.4349459), (0.6249999, 0.4349459), (0.5999999, 0.4349459), (0.5749999, 0.4349459), (0.54999995, 0.4349459), (0.525, 0.4349459), (0.5, 0.4349459), (0.47500002, 0.4349459), (0.425, 0.6850338), (0.4, 0.6850338), (0.375, 0.6850338), (0.6249999, 0.6850338), (0.5999999, 0.6850338), (0.5749999, 0.6850338), (0.54999995, 0.6850338), (0.525, 0.6850338), (0.5, 0.6850338), (0.47500002, 0.6850338), (0.45000002, 0.6850338), (0.4375, 0.6850338), (0.4, 0.5037655), (0.425, 0.5037655), (0.425, 0.52954483), (0.4, 0.52954483), (0.375, 0.5037655), (0.375, 0.52954483), (0.5999999, 0.5037655), (0.6249999, 0.5037655), (0.6249999, 0.52954483), (0.5999999, 0.52954483), (0.5749999, 0.5037655), (0.5749999, 0.52954483), (0.54999995, 0.5037655), (0.54999995, 0.52954483), (0.525, 0.5037655), (0.525, 0.52954483), (0.5, 0.5037655), (0.5, 0.52954483), (0.47500002, 0.5037655), (0.47500002, 0.52954483), (0.45000002, 0.5037655), (0.45, 0.52954483), (0.4375, 0.52954483), (0.4375, 0.5037655), (0.5999999, 0.68843985), (0.5749999, 0.68843985), (0.54999995, 0.68843985), (0.525, 0.68843985), (0.5, 0.68843985), (0.47500002, 0.68843985), (0.45000002, 0.68843985), (0.43953425, 0.68843985), (0.425, 0.68843985), (0.4, 0.68843985), (0.375, 0.68843985), (0.6249999, 0.68843985)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 6, 5, 4, 7, 8, 9, 8, 10, 11, 9, 10, 12, 13, 11, 12, 14, 15, 13, 14, 16, 17, 15, 16, 18, 19, 17, 18, 20, 21, 19, 20, 22, 23, 21, 24, 25, 26, 27, 25, 28, 29, 26, 30, 31, 32, 33, 33, 34, 35, 30, 34, 36, 37, 35, 36, 38, 39, 37, 38, 40, 41, 39, 40, 42, 43, 41, 42, 44, 45, 43, 44, 46, 47, 45, 48, 49, 50, 51, 49, 52, 53, 50, 54, 55, 56, 57, 57, 58, 59, 54, 58, 60, 61, 59, 60, 62, 63, 61, 62, 64, 65, 63, 64, 66, 67, 65, 66, 68, 69, 67, 68, 70, 71, 69, 72, 73, 74, 75, 72, 74, 76, 77, 75, 74, 78, 76, 74, 79, 78, 74, 80, 79, 74, 81, 80, 74, 82, 81, 74, 83, 82, 74, 73, 83, 74, 84, 85, 86, 85, 87, 86, 87, 88, 89, 86, 89, 90, 86, 90, 91, 86, 91, 92, 86, 92, 93, 86, 93, 94, 86, 94, 95, 86, 95, 84, 86, 72, 73, 73, 72, 75, 72, 72, 75, 77, 75, 75, 96, 78, 76, 76, 78, 79, 78, 78, 79, 80, 79, 79, 80, 81, 80, 80, 81, 82, 81, 81, 82, 83, 82, 82, 83, 73, 83, 83, 73, 72, 73, 97, 98, 75, 72, 98, 75, 77, 75, 75, 96, 78, 76, 76, 99, 79, 78, 99, 79, 80, 79, 79, 80, 81, 80, 80, 100, 82, 81, 100, 101, 83, 82, 101, 83, 73, 83, 83, 97, 102, 103, 6, 9, 2, 5, 104, 105, 3, 2, 105, 106, 21, 23, 107, 108, 19, 21, 108, 109, 17, 19, 109, 110, 15, 17, 110, 111, 13, 15, 111, 112, 11, 13, 112, 113, 9, 11, 113, 102, 75, 72, 72, 75, 76, 96, 75, 75, 77, 76, 78, 76, 76, 78, 79, 78, 78, 79, 80, 79, 79, 80, 81, 80, 80, 81, 82, 81, 81, 82, 83, 82, 82, 83, 73, 83, 83, 73, 72, 73, 73, 72, 77, 96, 76, 76, 83, 101, 82, 83, 97, 83, 83, 73, 98, 97, 73, 72, 75, 98, 72, 75, 76, 96, 75, 75, 77, 76, 99, 76, 76, 78, 79, 99, 78, 79, 80, 79, 79, 80, 100, 80, 80, 81, 101, 100, 81, 82, 77, 96, 76, 76, 50, 53, 114, 115, 51, 50, 115, 116, 69, 71, 117, 118, 67, 69, 118, 119, 65, 67, 119, 120, 63, 65, 120, 121, 61, 63, 121, 122, 59, 61, 122, 123, 54, 59, 123, 124, 124, 125, 55, 54, 55, 53, 52, 56, 126, 127, 128, 129, 130, 126, 129, 131, 132, 133, 134, 135, 136, 132, 135, 137, 138, 136, 137, 139, 140, 138, 139, 141, 142, 140, 141, 143, 144, 142, 143, 145, 146, 144, 145, 147, 147, 148, 149, 146, 31, 29, 28, 32, 129, 128, 52, 49, 131, 129, 49, 48, 135, 134, 70, 68, 137, 135, 68, 66, 139, 137, 66, 64, 141, 139, 64, 62, 143, 141, 62, 60, 145, 143, 60, 58, 147, 145, 58, 57, 56, 52, 128, 148, 147, 57, 148, 128, 127, 149, 26, 29, 127, 126, 27, 26, 126, 130, 45, 47, 133, 132, 43, 45, 132, 136, 41, 43, 136, 138, 39, 41, 138, 140, 37, 39, 140, 142, 35, 37, 142, 144, 30, 35, 144, 146, 146, 149, 31, 30, 149, 127, 29, 31, 105, 104, 28, 25, 106, 105, 25, 24, 108, 107, 46, 44, 109, 108, 44, 42, 110, 109, 42, 40, 111, 110, 40, 38, 112, 111, 38, 36, 113, 112, 36, 34, 102, 113, 34, 33, 32, 28, 104, 103, 102, 33, 103, 104, 5, 6, 119, 118, 150, 151, 120, 119, 151, 152, 121, 120, 152, 153, 122, 121, 153, 154, 123, 122, 154, 155, 124, 123, 155, 156, 157, 158, 114, 125, 124, 156, 115, 114, 158, 159, 116, 115, 159, 160, 118, 117, 161, 150, 125, 114, 53, 55]
                float3 xformOp:rotateXYZ = (90, 90, 0)
                float3 xformOp:scale = (0.024092464, 2.1872163, 0.32524762)
                double3 xformOp:translate = (-3.039193802034866, 0.6367939934777525, 4.634549569008068)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        def Xform "Gun_Mount_R"
        {
            double3 xformOp:translate = (0, 0, -9.299816027783434)
            float3 xformOp:translate:pivot = (-2.765865, 0.553111, 4.7016206)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

            def Mesh "Mount_1"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                rel material:binding = </Fighters_Base/Looks/Comonents_DarkSG>
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.00035979215, 0.00035979215, 0.00035979215)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                float3 xformOp:scale = (1, 0.47918496, 0.12032684)
                double3 xformOp:translate = (-0.8889399812098926, 0.6409122665418041, 4.70551827549842)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
            }

            def Mesh "Mount_2"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
                rel material:binding = </Fighters_Base/Looks/Comonents_DarkSG>
                point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
                color3f[] primvars:displayColor = [(0.00035979215, 0.00035979215, 0.00035979215)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
                float3 xformOp:scale = (1, 0.24214712, 0.8208646)
                double3 xformOp:translate = (-1.3499975182660988, 0.38411193717832226, 4.705518275498418)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]
            }

            def Mesh "Gun_L"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-1, -0.96176887, -0.9510567), (1, 0.9999998, 0.9510565)]
                int[] faceVertexCounts = [4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 64, 65, 1, 2, 63, 64, 75, 63, 2, 74, 3, 62, 3, 4, 71, 62, 4, 5, 70, 71, 5, 6, 69, 70, 6, 7, 68, 69, 7, 8, 67, 68, 8, 9, 66, 67, 9, 0, 65, 66, 10, 11, 135, 136, 11, 12, 134, 135, 143, 144, 76, 13, 13, 14, 142, 143, 14, 15, 141, 142, 15, 16, 140, 141, 16, 17, 139, 140, 17, 18, 138, 139, 18, 19, 137, 138, 19, 10, 136, 137, 20, 21, 102, 103, 21, 22, 101, 102, 110, 111, 77, 23, 23, 24, 109, 110, 24, 25, 108, 109, 25, 26, 107, 108, 26, 27, 106, 107, 27, 28, 105, 106, 28, 29, 104, 105, 29, 20, 103, 104, 52, 51, 53, 54, 52, 53, 55, 72, 54, 53, 56, 55, 53, 57, 56, 53, 58, 57, 53, 59, 58, 53, 60, 59, 53, 61, 60, 53, 51, 61, 53, 30, 31, 40, 31, 32, 40, 32, 78, 33, 40, 33, 34, 40, 34, 35, 40, 35, 36, 40, 36, 37, 40, 37, 38, 40, 38, 39, 40, 39, 30, 40, 1, 0, 88, 79, 2, 1, 79, 80, 74, 2, 80, 89, 4, 3, 81, 82, 5, 4, 82, 83, 6, 5, 83, 84, 7, 6, 84, 85, 8, 7, 85, 86, 9, 8, 86, 87, 0, 9, 87, 88, 42, 41, 92, 93, 43, 42, 93, 94, 73, 43, 94, 100, 45, 44, 95, 96, 46, 45, 96, 97, 47, 46, 97, 98, 48, 47, 98, 99, 49, 48, 99, 90, 50, 49, 90, 91, 41, 50, 91, 92, 154, 155, 75, 62, 64, 63, 145, 146, 65, 64, 146, 147, 66, 65, 147, 148, 67, 66, 148, 149, 68, 67, 149, 150, 69, 68, 150, 151, 70, 69, 151, 152, 71, 70, 152, 153, 62, 71, 153, 154, 80, 79, 42, 43, 81, 89, 80, 43, 73, 44, 82, 81, 44, 45, 83, 82, 45, 46, 84, 83, 46, 47, 85, 84, 47, 48, 86, 85, 48, 49, 87, 86, 49, 50, 88, 87, 50, 41, 79, 88, 41, 42, 74, 89, 81, 3, 91, 90, 60, 61, 92, 91, 61, 51, 93, 92, 51, 52, 94, 93, 52, 54, 95, 100, 94, 54, 72, 55, 96, 95, 55, 56, 97, 96, 56, 57, 98, 97, 57, 58, 99, 98, 58, 59, 90, 99, 59, 60, 73, 100, 95, 44, 102, 101, 163, 164, 103, 102, 164, 165, 104, 103, 165, 156, 105, 104, 156, 157, 106, 105, 157, 158, 107, 106, 158, 159, 108, 107, 159, 160, 109, 108, 160, 161, 110, 109, 161, 162, 162, 166, 111, 110, 111, 101, 22, 77, 113, 112, 123, 124, 114, 113, 124, 125, 115, 114, 125, 126, 116, 115, 126, 127, 117, 116, 127, 128, 118, 117, 128, 129, 119, 118, 129, 130, 120, 119, 130, 131, 121, 120, 131, 132, 132, 133, 122, 121, 144, 134, 12, 76, 124, 123, 22, 21, 125, 124, 21, 20, 126, 125, 20, 29, 127, 126, 29, 28, 128, 127, 28, 27, 129, 128, 27, 26, 130, 129, 26, 25, 131, 130, 25, 24, 132, 131, 24, 23, 77, 22, 123, 133, 132, 23, 133, 123, 112, 122, 135, 134, 112, 113, 136, 135, 113, 114, 137, 136, 114, 115, 138, 137, 115, 116, 139, 138, 116, 117, 140, 139, 117, 118, 141, 140, 118, 119, 142, 141, 119, 120, 143, 142, 120, 121, 121, 122, 144, 143, 122, 112, 134, 144, 146, 145, 12, 11, 147, 146, 11, 10, 148, 147, 10, 19, 149, 148, 19, 18, 150, 149, 18, 17, 151, 150, 17, 16, 152, 151, 16, 15, 153, 152, 15, 14, 154, 153, 14, 13, 76, 12, 145, 155, 154, 13, 155, 145, 63, 75, 157, 156, 39, 38, 158, 157, 38, 37, 159, 158, 37, 36, 160, 159, 36, 35, 161, 160, 35, 34, 162, 161, 34, 33, 78, 32, 163, 166, 162, 33, 164, 163, 32, 31, 165, 164, 31, 30, 156, 165, 30, 39, 166, 163, 101, 111]
                rel material:binding = </Fighters_Base/Looks/ComponentsSG>
                point3f[] points = [(0.27605057, -0.9617688, -0.19834018), (0.10238457, -0.9617688, -0.32451534), (-0.103551865, -0.9617688, -0.31870008), (-0.2711029, -0.9617688, -0.1969676), (-0.33510208, -0.9617688, 0), (-0.2711029, -0.9617688, 0.19696689), (-0.103551865, -0.9617688, 0.31869984), (0.10355377, -0.9617688, 0.31869984), (0.2711048, -0.9617688, 0.19696689), (0.33510017, -0.9617688, 0), (0.2711048, 0.28178418, -0.1969676), (0.10355377, 0.28178418, -0.31870008), (-0.103551865, 0.28178418, -0.31870008), (-0.2711029, 0.28178418, -0.1969676), (-0.33510208, 0.28178418, 0), (-0.2711029, 0.28178418, 0.19696689), (-0.103551865, 0.28178418, 0.31869984), (0.10355377, 0.28178418, 0.31869984), (0.2711048, 0.28178418, 0.19696689), (0.33510017, 0.28178418, 0), (0.8090191, 0.3333333, -0.5877857), (0.30901718, 0.3333333, -0.9510567), (-0.30901718, 0.3333333, -0.9510567), (-0.8090172, 0.3333333, -0.58778524), (-1, 0.3333333, 0), (-0.8090172, 0.3333333, 0.5877851), (-0.30901718, 0.3333333, 0.9510565), (0.30901718, 0.3333333, 0.9510565), (0.8090191, 0.3333333, 0.5877851), (1, 0.3333333, 0), (0.8090191, 0.9999998, -0.5877857), (0.30901718, 0.9999998, -0.9510567), (-0.30901718, 0.9999998, -0.9510567), (-0.8090172, 0.9999998, -0.58778524), (-1, 0.9999998, 0), (-0.8090172, 0.9999998, 0.5877851), (-0.30901718, 0.9999998, 0.9510565), (0.30901718, 0.9999998, 0.9510565), (0.8090191, 0.9999998, 0.5877851), (1, 0.9999998, 0), (0, 0.9999998, 0), (0.22795677, -0.9617688, -0.16420364), (0.0848465, -0.9617688, -0.2681687), (-0.08669472, -0.9617688, -0.26416302), (-0.2259674, -0.9617688, -0.16288853), (-0.27931404, -0.9617688, 0.00079131126), (-0.22616959, -0.9617688, 0.16462255), (-0.08680153, -0.9617688, 0.2658646), (0.08542061, -0.9617688, 0.26575708), (0.22458076, -0.9617688, 0.16445303), (0.27783203, -0.9617688, 0.00068068504), (0.22795677, 0.1288827, -0.16420364), (0.0848465, 0.1288827, -0.2681687), (-0.004945755, 0.1288827, 0.0058147907), (-0.08669472, 0.1288827, -0.26416302), (-0.2259674, 0.1288827, -0.16288853), (-0.27931404, 0.1288827, 0.00079131126), (-0.22616959, 0.1288827, 0.16462255), (-0.08680153, 0.1288827, 0.2658646), (0.08542061, 0.1288827, 0.26575708), (0.22458076, 0.1288827, 0.16445303), (0.27783203, 0.1288827, 0.00068068504), (-0.2711029, -0.95851356, -0.1969676), (-0.103551865, -0.95851356, -0.31870008), (0.10238763, -0.95851356, -0.3245001), (0.27603763, -0.95851356, -0.19833659), (0.33510017, -0.95851356, 0), (0.2711048, -0.95851356, 0.19696689), (0.10355377, -0.95851356, 0.31869984), (-0.103551865, -0.95851356, 0.31869984), (-0.2711029, -0.95851356, 0.19696689), (-0.33510208, -0.95851356, 0), (-0.16766363, 0.1288827, -0.2052851), (-0.16766363, -0.9617688, -0.2052851), (-0.20096096, -0.9617688, -0.2479285), (-0.20096096, -0.95851356, -0.2479285), (-0.20096096, 0.28178418, -0.2479285), (-0.599702, 0.3333333, -0.7398617), (-0.599702, 0.99999976, -0.7398617), (0.09477638, -0.96176887, -0.3000716), (-0.09623906, -0.96176887, -0.29504132), (-0.25152266, -0.96176887, -0.18218374), (-0.31090066, -0.96176887, 0.00034327898), (-0.25161037, -0.96176887, 0.18293558), (-0.0962854, -0.96176887, 0.29577938), (0.09568742, -0.96176887, 0.29573274), (0.2509222, -0.96176887, 0.18286204), (0.31025666, -0.96176887, 0.0002952882), (0.25518698, -0.96176887, -0.1835314), (-0.17388086, -0.96176887, -0.23861253), (0.22458076, -0.95831466, 0.16445303), (0.277832, -0.95831466, 0.000680685), (0.22795677, -0.95831466, -0.16420364), (0.0848465, -0.95831466, -0.2681687), (-0.08669472, -0.95831466, -0.26416302), (-0.2259674, -0.95831466, -0.16288851), (-0.27931404, -0.95831466, 0.0007913112), (-0.22616959, -0.95831466, 0.16462255), (-0.08680153, -0.95831466, 0.2658646), (0.08542061, -0.95831466, 0.26575708), (-0.15633106, -0.95831466, -0.21352577), (-0.30901718, 0.3403223, -0.9510567), (0.30901718, 0.3403223, -0.9510567), (0.8090191, 0.3403223, -0.5877857), (1, 0.3403223, 0), (0.8090191, 0.3403223, 0.5877851), (0.30901718, 0.3403223, 0.9510565), (-0.30901718, 0.3403223, 0.9510565), (-0.8090172, 0.3403223, 0.5877851), (-1, 0.3403223, 0), (-0.8090172, 0.3403223, -0.58778524), (-0.5590172, 0.3403223, -0.769421), (-0.21168806, 0.30891442, -0.65150875), (0.21168895, 0.30891442, -0.65150875), (0.5542085, 0.30891442, -0.40265477), (0.6850363, 0.30891442, 0), (0.5542085, 0.30891442, 0.40265414), (0.21168895, 0.30891442, 0.6515085), (-0.21168806, 0.30891442, 0.6515085), (-0.55420667, 0.30891442, 0.40265414), (-0.6850372, 0.30891442, 0), (-0.55420667, 0.30891442, -0.40265453), (-0.38294736, 0.30891442, -0.5270816), (-0.25395614, 0.31951904, -0.7815964), (0.25395662, 0.31951904, -0.7815964), (0.66486764, 0.31951904, -0.48305342), (0.8218187, 0.31951904, 0), (0.66486764, 0.31951904, 0.4830528), (0.25395662, 0.31951904, 0.7815961), (-0.25395614, 0.31951904, 0.7815961), (-0.66486573, 0.31951904, 0.4830528), (-0.8218192, 0.31951904, 0), (-0.66486573, 0.31951904, -0.4830531), (-0.45941094, 0.31951904, -0.63232476), (-0.15760021, 0.29534435, -0.48504364), (0.15760161, 0.29534435, -0.48504364), (0.41260493, 0.29534435, -0.2997736), (0.5100043, 0.29534435, 0), (0.41260493, 0.29534435, 0.29977295), (0.15760161, 0.29534435, 0.4850434), (-0.15760021, 0.29534435, 0.4850434), (-0.41260308, 0.29534435, 0.29977295), (-0.5100057, 0.29534435, 0), (-0.41260308, 0.29534435, -0.29977348), (-0.2919209, 0.29534435, -0.38745403), (-0.103551865, 0.2533297, -0.31870008), (0.103527024, 0.2533297, -0.31883314), (0.27121797, 0.2533297, -0.19699901), (0.33510017, 0.2533297, 0), (0.2711048, 0.2533297, 0.19696689), (0.10355377, 0.2533297, 0.31869984), (-0.103551865, 0.2533297, 0.31869984), (-0.2711029, 0.2533297, 0.19696689), (-0.33510208, 0.2533297, 0), (-0.2711029, 0.2533297, -0.1969676), (-0.18732738, 0.2533297, -0.25783384), (1, 0.98187983, 0), (0.8090191, 0.98187983, 0.5877851), (0.30901718, 0.98187983, 0.9510565), (-0.30901718, 0.98187983, 0.9510565), (-0.8090172, 0.98187983, 0.5877851), (-1, 0.98187983, 0), (-0.8090172, 0.98187983, -0.58778524), (-0.30901718, 0.98187983, -0.9510567), (0.30901718, 0.98187983, -0.9510567), (0.8090191, 0.98187983, -0.5877857), (-0.5590172, 0.98187983, -0.769421)]
                color3f[] primvars:displayColor = [(0.0056499722, 0.0056499722, 0.0056499722)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0.3125), (0.4, 0.3125), (0.40000004, 0.31282803), (0.37500003, 0.31282803), (0.425, 0.3125), (0.425, 0.31282803), (0.43953425, 0.31282803), (0.43953425, 0.3125), (0.45000002, 0.3125), (0.45000002, 0.31282803), (0.47500002, 0.3125), (0.47500002, 0.31282803), (0.5, 0.3125), (0.5, 0.31282803), (0.525, 0.3125), (0.525, 0.31282803), (0.54999995, 0.3125), (0.54999995, 0.31282803), (0.5749999, 0.3125), (0.5749999, 0.31282803), (0.5999999, 0.3125), (0.5999999, 0.31282803), (0.6249999, 0.3125), (0.6249999, 0.31282803), (0.375, 0.43781328), (0.4, 0.43781328), (0.40000004, 0.47077733), (0.375, 0.47077733), (0.425, 0.43781328), (0.425, 0.47077733), (0.45000005, 0.47077733), (0.43851748, 0.47077733), (0.43953425, 0.43781328), (0.45000002, 0.43781328), (0.47500002, 0.43781328), (0.47500002, 0.47077733), (0.5, 0.43781328), (0.5, 0.47077733), (0.525, 0.43781328), (0.525, 0.47077733), (0.54999995, 0.43781328), (0.54999995, 0.47077733), (0.5749999, 0.43781328), (0.5749999, 0.47077733), (0.5999999, 0.43781328), (0.5999999, 0.47077733), (0.6249999, 0.43781328), (0.6249999, 0.47077733), (0.375, 0.56312656), (0.4, 0.56312656), (0.4, 0.5644403), (0.375, 0.5644403), (0.425, 0.56312656), (0.425, 0.5644403), (0.45000002, 0.5644403), (0.4375, 0.5644403), (0.43953425, 0.56312656), (0.45000002, 0.56312656), (0.47500002, 0.56312656), (0.47500002, 0.5644403), (0.5, 0.56312656), (0.5, 0.5644403), (0.525, 0.56312656), (0.525, 0.5644403), (0.54999995, 0.56312656), (0.54999995, 0.5644403), (0.5749999, 0.56312656), (0.5749999, 0.5644403), (0.5999999, 0.56312656), (0.5999999, 0.5644403), (0.6249999, 0.56312656), (0.6249999, 0.5644403), (0.5482839, 0.007647395), (0.62640893, 0.064408526), (0.5, 0.15), (0.45171607, 0.00764741), (0.37359107, 0.064408556), (0.40629655, 0.04064662), (0.34375, 0.15625), (0.37359107, 0.24809146), (0.4517161, 0.3048526), (0.54828393, 0.3048526), (0.62640893, 0.24809146), (0.65625, 0.15625), (0.62640893, 0.93559146), (0.54828393, 0.9923526), (0.5, 0.8375), (0.4517161, 0.9923526), (0.40629655, 0.9593534), (0.37359107, 0.93559146), (0.34375, 0.84375), (0.37359107, 0.75190854), (0.45171607, 0.6951474), (0.5482839, 0.6951474), (0.62640893, 0.75190854), (0.65625, 0.84375), (0.41265357, 0.036027983), (0.6264089, 0.064408526), (0.5482838, 0.007647395), (0.34374997, 0.15625), (0.5482839, 0.3048526), (0.6264089, 0.24809146), (0.45000002, 0.4349459), (0.4375, 0.4349459), (0.425, 0.4349459), (0.4, 0.4349459), (0.375, 0.4349459), (0.6249999, 0.4349459), (0.5999999, 0.4349459), (0.5749999, 0.4349459), (0.54999995, 0.4349459), (0.525, 0.4349459), (0.5, 0.4349459), (0.47500002, 0.4349459), (0.425, 0.6850338), (0.4, 0.6850338), (0.375, 0.6850338), (0.6249999, 0.6850338), (0.5999999, 0.6850338), (0.5749999, 0.6850338), (0.54999995, 0.6850338), (0.525, 0.6850338), (0.5, 0.6850338), (0.47500002, 0.6850338), (0.45000002, 0.6850338), (0.4375, 0.6850338), (0.4, 0.5037655), (0.425, 0.5037655), (0.425, 0.52954483), (0.4, 0.52954483), (0.375, 0.5037655), (0.375, 0.52954483), (0.5999999, 0.5037655), (0.6249999, 0.5037655), (0.6249999, 0.52954483), (0.5999999, 0.52954483), (0.5749999, 0.5037655), (0.5749999, 0.52954483), (0.54999995, 0.5037655), (0.54999995, 0.52954483), (0.525, 0.5037655), (0.525, 0.52954483), (0.5, 0.5037655), (0.5, 0.52954483), (0.47500002, 0.5037655), (0.47500002, 0.52954483), (0.45000002, 0.5037655), (0.45, 0.52954483), (0.4375, 0.52954483), (0.4375, 0.5037655), (0.5999999, 0.68843985), (0.5749999, 0.68843985), (0.54999995, 0.68843985), (0.525, 0.68843985), (0.5, 0.68843985), (0.47500002, 0.68843985), (0.45000002, 0.68843985), (0.43953425, 0.68843985), (0.425, 0.68843985), (0.4, 0.68843985), (0.375, 0.68843985), (0.6249999, 0.68843985)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 6, 5, 4, 7, 8, 9, 8, 10, 11, 9, 10, 12, 13, 11, 12, 14, 15, 13, 14, 16, 17, 15, 16, 18, 19, 17, 18, 20, 21, 19, 20, 22, 23, 21, 24, 25, 26, 27, 25, 28, 29, 26, 30, 31, 32, 33, 33, 34, 35, 30, 34, 36, 37, 35, 36, 38, 39, 37, 38, 40, 41, 39, 40, 42, 43, 41, 42, 44, 45, 43, 44, 46, 47, 45, 48, 49, 50, 51, 49, 52, 53, 50, 54, 55, 56, 57, 57, 58, 59, 54, 58, 60, 61, 59, 60, 62, 63, 61, 62, 64, 65, 63, 64, 66, 67, 65, 66, 68, 69, 67, 68, 70, 71, 69, 72, 73, 74, 75, 72, 74, 76, 77, 75, 74, 78, 76, 74, 79, 78, 74, 80, 79, 74, 81, 80, 74, 82, 81, 74, 83, 82, 74, 73, 83, 74, 84, 85, 86, 85, 87, 86, 87, 88, 89, 86, 89, 90, 86, 90, 91, 86, 91, 92, 86, 92, 93, 86, 93, 94, 86, 94, 95, 86, 95, 84, 86, 72, 73, 73, 72, 75, 72, 72, 75, 77, 75, 75, 96, 78, 76, 76, 78, 79, 78, 78, 79, 80, 79, 79, 80, 81, 80, 80, 81, 82, 81, 81, 82, 83, 82, 82, 83, 73, 83, 83, 73, 72, 73, 97, 98, 75, 72, 98, 75, 77, 75, 75, 96, 78, 76, 76, 99, 79, 78, 99, 79, 80, 79, 79, 80, 81, 80, 80, 100, 82, 81, 100, 101, 83, 82, 101, 83, 73, 83, 83, 97, 102, 103, 6, 9, 2, 5, 104, 105, 3, 2, 105, 106, 21, 23, 107, 108, 19, 21, 108, 109, 17, 19, 109, 110, 15, 17, 110, 111, 13, 15, 111, 112, 11, 13, 112, 113, 9, 11, 113, 102, 75, 72, 72, 75, 76, 96, 75, 75, 77, 76, 78, 76, 76, 78, 79, 78, 78, 79, 80, 79, 79, 80, 81, 80, 80, 81, 82, 81, 81, 82, 83, 82, 82, 83, 73, 83, 83, 73, 72, 73, 73, 72, 77, 96, 76, 76, 83, 101, 82, 83, 97, 83, 83, 73, 98, 97, 73, 72, 75, 98, 72, 75, 76, 96, 75, 75, 77, 76, 99, 76, 76, 78, 79, 99, 78, 79, 80, 79, 79, 80, 100, 80, 80, 81, 101, 100, 81, 82, 77, 96, 76, 76, 50, 53, 114, 115, 51, 50, 115, 116, 69, 71, 117, 118, 67, 69, 118, 119, 65, 67, 119, 120, 63, 65, 120, 121, 61, 63, 121, 122, 59, 61, 122, 123, 54, 59, 123, 124, 124, 125, 55, 54, 55, 53, 52, 56, 126, 127, 128, 129, 130, 126, 129, 131, 132, 133, 134, 135, 136, 132, 135, 137, 138, 136, 137, 139, 140, 138, 139, 141, 142, 140, 141, 143, 144, 142, 143, 145, 146, 144, 145, 147, 147, 148, 149, 146, 31, 29, 28, 32, 129, 128, 52, 49, 131, 129, 49, 48, 135, 134, 70, 68, 137, 135, 68, 66, 139, 137, 66, 64, 141, 139, 64, 62, 143, 141, 62, 60, 145, 143, 60, 58, 147, 145, 58, 57, 56, 52, 128, 148, 147, 57, 148, 128, 127, 149, 26, 29, 127, 126, 27, 26, 126, 130, 45, 47, 133, 132, 43, 45, 132, 136, 41, 43, 136, 138, 39, 41, 138, 140, 37, 39, 140, 142, 35, 37, 142, 144, 30, 35, 144, 146, 146, 149, 31, 30, 149, 127, 29, 31, 105, 104, 28, 25, 106, 105, 25, 24, 108, 107, 46, 44, 109, 108, 44, 42, 110, 109, 42, 40, 111, 110, 40, 38, 112, 111, 38, 36, 113, 112, 36, 34, 102, 113, 34, 33, 32, 28, 104, 103, 102, 33, 103, 104, 5, 6, 119, 118, 150, 151, 120, 119, 151, 152, 121, 120, 152, 153, 122, 121, 153, 154, 123, 122, 154, 155, 124, 123, 155, 156, 157, 158, 114, 125, 124, 156, 115, 114, 158, 159, 116, 115, 159, 160, 118, 117, 161, 150, 125, 114, 53, 55]
                float3 xformOp:rotateXYZ = (90, 90, 0)
                float3 xformOp:scale = (0.16435777, 2.1872163, 0.16435777)
                double3 xformOp:translate = (-3.039193802034866, 0.382030845247315, 5.100254734519739)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "Gun_R"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-1, -0.96176887, -0.9510567), (1, 0.9999998, 0.9510565)]
                int[] faceVertexCounts = [4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 64, 65, 1, 2, 63, 64, 75, 63, 2, 74, 3, 62, 3, 4, 71, 62, 4, 5, 70, 71, 5, 6, 69, 70, 6, 7, 68, 69, 7, 8, 67, 68, 8, 9, 66, 67, 9, 0, 65, 66, 10, 11, 135, 136, 11, 12, 134, 135, 143, 144, 76, 13, 13, 14, 142, 143, 14, 15, 141, 142, 15, 16, 140, 141, 16, 17, 139, 140, 17, 18, 138, 139, 18, 19, 137, 138, 19, 10, 136, 137, 20, 21, 102, 103, 21, 22, 101, 102, 110, 111, 77, 23, 23, 24, 109, 110, 24, 25, 108, 109, 25, 26, 107, 108, 26, 27, 106, 107, 27, 28, 105, 106, 28, 29, 104, 105, 29, 20, 103, 104, 52, 51, 53, 54, 52, 53, 55, 72, 54, 53, 56, 55, 53, 57, 56, 53, 58, 57, 53, 59, 58, 53, 60, 59, 53, 61, 60, 53, 51, 61, 53, 30, 31, 40, 31, 32, 40, 32, 78, 33, 40, 33, 34, 40, 34, 35, 40, 35, 36, 40, 36, 37, 40, 37, 38, 40, 38, 39, 40, 39, 30, 40, 1, 0, 88, 79, 2, 1, 79, 80, 74, 2, 80, 89, 4, 3, 81, 82, 5, 4, 82, 83, 6, 5, 83, 84, 7, 6, 84, 85, 8, 7, 85, 86, 9, 8, 86, 87, 0, 9, 87, 88, 42, 41, 92, 93, 43, 42, 93, 94, 73, 43, 94, 100, 45, 44, 95, 96, 46, 45, 96, 97, 47, 46, 97, 98, 48, 47, 98, 99, 49, 48, 99, 90, 50, 49, 90, 91, 41, 50, 91, 92, 154, 155, 75, 62, 64, 63, 145, 146, 65, 64, 146, 147, 66, 65, 147, 148, 67, 66, 148, 149, 68, 67, 149, 150, 69, 68, 150, 151, 70, 69, 151, 152, 71, 70, 152, 153, 62, 71, 153, 154, 80, 79, 42, 43, 81, 89, 80, 43, 73, 44, 82, 81, 44, 45, 83, 82, 45, 46, 84, 83, 46, 47, 85, 84, 47, 48, 86, 85, 48, 49, 87, 86, 49, 50, 88, 87, 50, 41, 79, 88, 41, 42, 74, 89, 81, 3, 91, 90, 60, 61, 92, 91, 61, 51, 93, 92, 51, 52, 94, 93, 52, 54, 95, 100, 94, 54, 72, 55, 96, 95, 55, 56, 97, 96, 56, 57, 98, 97, 57, 58, 99, 98, 58, 59, 90, 99, 59, 60, 73, 100, 95, 44, 102, 101, 163, 164, 103, 102, 164, 165, 104, 103, 165, 156, 105, 104, 156, 157, 106, 105, 157, 158, 107, 106, 158, 159, 108, 107, 159, 160, 109, 108, 160, 161, 110, 109, 161, 162, 162, 166, 111, 110, 111, 101, 22, 77, 113, 112, 123, 124, 114, 113, 124, 125, 115, 114, 125, 126, 116, 115, 126, 127, 117, 116, 127, 128, 118, 117, 128, 129, 119, 118, 129, 130, 120, 119, 130, 131, 121, 120, 131, 132, 132, 133, 122, 121, 144, 134, 12, 76, 124, 123, 22, 21, 125, 124, 21, 20, 126, 125, 20, 29, 127, 126, 29, 28, 128, 127, 28, 27, 129, 128, 27, 26, 130, 129, 26, 25, 131, 130, 25, 24, 132, 131, 24, 23, 77, 22, 123, 133, 132, 23, 133, 123, 112, 122, 135, 134, 112, 113, 136, 135, 113, 114, 137, 136, 114, 115, 138, 137, 115, 116, 139, 138, 116, 117, 140, 139, 117, 118, 141, 140, 118, 119, 142, 141, 119, 120, 143, 142, 120, 121, 121, 122, 144, 143, 122, 112, 134, 144, 146, 145, 12, 11, 147, 146, 11, 10, 148, 147, 10, 19, 149, 148, 19, 18, 150, 149, 18, 17, 151, 150, 17, 16, 152, 151, 16, 15, 153, 152, 15, 14, 154, 153, 14, 13, 76, 12, 145, 155, 154, 13, 155, 145, 63, 75, 157, 156, 39, 38, 158, 157, 38, 37, 159, 158, 37, 36, 160, 159, 36, 35, 161, 160, 35, 34, 162, 161, 34, 33, 78, 32, 163, 166, 162, 33, 164, 163, 32, 31, 165, 164, 31, 30, 156, 165, 30, 39, 166, 163, 101, 111]
                rel material:binding = </Fighters_Base/Looks/ComponentsSG>
                point3f[] points = [(0.27605057, -0.9617688, -0.19834018), (0.10238457, -0.9617688, -0.32451534), (-0.103551865, -0.9617688, -0.31870008), (-0.2711029, -0.9617688, -0.1969676), (-0.33510208, -0.9617688, 0), (-0.2711029, -0.9617688, 0.19696689), (-0.103551865, -0.9617688, 0.31869984), (0.10355377, -0.9617688, 0.31869984), (0.2711048, -0.9617688, 0.19696689), (0.33510017, -0.9617688, 0), (0.2711048, 0.28178418, -0.1969676), (0.10355377, 0.28178418, -0.31870008), (-0.103551865, 0.28178418, -0.31870008), (-0.2711029, 0.28178418, -0.1969676), (-0.33510208, 0.28178418, 0), (-0.2711029, 0.28178418, 0.19696689), (-0.103551865, 0.28178418, 0.31869984), (0.10355377, 0.28178418, 0.31869984), (0.2711048, 0.28178418, 0.19696689), (0.33510017, 0.28178418, 0), (0.8090191, 0.3333333, -0.5877857), (0.30901718, 0.3333333, -0.9510567), (-0.30901718, 0.3333333, -0.9510567), (-0.8090172, 0.3333333, -0.58778524), (-1, 0.3333333, 0), (-0.8090172, 0.3333333, 0.5877851), (-0.30901718, 0.3333333, 0.9510565), (0.30901718, 0.3333333, 0.9510565), (0.8090191, 0.3333333, 0.5877851), (1, 0.3333333, 0), (0.8090191, 0.9999998, -0.5877857), (0.30901718, 0.9999998, -0.9510567), (-0.30901718, 0.9999998, -0.9510567), (-0.8090172, 0.9999998, -0.58778524), (-1, 0.9999998, 0), (-0.8090172, 0.9999998, 0.5877851), (-0.30901718, 0.9999998, 0.9510565), (0.30901718, 0.9999998, 0.9510565), (0.8090191, 0.9999998, 0.5877851), (1, 0.9999998, 0), (0, 0.9999998, 0), (0.22795677, -0.9617688, -0.16420364), (0.0848465, -0.9617688, -0.2681687), (-0.08669472, -0.9617688, -0.26416302), (-0.2259674, -0.9617688, -0.16288853), (-0.27931404, -0.9617688, 0.00079131126), (-0.22616959, -0.9617688, 0.16462255), (-0.08680153, -0.9617688, 0.2658646), (0.08542061, -0.9617688, 0.26575708), (0.22458076, -0.9617688, 0.16445303), (0.27783203, -0.9617688, 0.00068068504), (0.22795677, 0.1288827, -0.16420364), (0.0848465, 0.1288827, -0.2681687), (-0.004945755, 0.1288827, 0.0058147907), (-0.08669472, 0.1288827, -0.26416302), (-0.2259674, 0.1288827, -0.16288853), (-0.27931404, 0.1288827, 0.00079131126), (-0.22616959, 0.1288827, 0.16462255), (-0.08680153, 0.1288827, 0.2658646), (0.08542061, 0.1288827, 0.26575708), (0.22458076, 0.1288827, 0.16445303), (0.27783203, 0.1288827, 0.00068068504), (-0.2711029, -0.95851356, -0.1969676), (-0.103551865, -0.95851356, -0.31870008), (0.10238763, -0.95851356, -0.3245001), (0.27603763, -0.95851356, -0.19833659), (0.33510017, -0.95851356, 0), (0.2711048, -0.95851356, 0.19696689), (0.10355377, -0.95851356, 0.31869984), (-0.103551865, -0.95851356, 0.31869984), (-0.2711029, -0.95851356, 0.19696689), (-0.33510208, -0.95851356, 0), (-0.16766363, 0.1288827, -0.2052851), (-0.16766363, -0.9617688, -0.2052851), (-0.20096096, -0.9617688, -0.2479285), (-0.20096096, -0.95851356, -0.2479285), (-0.20096096, 0.28178418, -0.2479285), (-0.599702, 0.3333333, -0.7398617), (-0.599702, 0.99999976, -0.7398617), (0.09477638, -0.96176887, -0.3000716), (-0.09623906, -0.96176887, -0.29504132), (-0.25152266, -0.96176887, -0.18218374), (-0.31090066, -0.96176887, 0.00034327898), (-0.25161037, -0.96176887, 0.18293558), (-0.0962854, -0.96176887, 0.29577938), (0.09568742, -0.96176887, 0.29573274), (0.2509222, -0.96176887, 0.18286204), (0.31025666, -0.96176887, 0.0002952882), (0.25518698, -0.96176887, -0.1835314), (-0.17388086, -0.96176887, -0.23861253), (0.22458076, -0.95831466, 0.16445303), (0.277832, -0.95831466, 0.000680685), (0.22795677, -0.95831466, -0.16420364), (0.0848465, -0.95831466, -0.2681687), (-0.08669472, -0.95831466, -0.26416302), (-0.2259674, -0.95831466, -0.16288851), (-0.27931404, -0.95831466, 0.0007913112), (-0.22616959, -0.95831466, 0.16462255), (-0.08680153, -0.95831466, 0.2658646), (0.08542061, -0.95831466, 0.26575708), (-0.15633106, -0.95831466, -0.21352577), (-0.30901718, 0.3403223, -0.9510567), (0.30901718, 0.3403223, -0.9510567), (0.8090191, 0.3403223, -0.5877857), (1, 0.3403223, 0), (0.8090191, 0.3403223, 0.5877851), (0.30901718, 0.3403223, 0.9510565), (-0.30901718, 0.3403223, 0.9510565), (-0.8090172, 0.3403223, 0.5877851), (-1, 0.3403223, 0), (-0.8090172, 0.3403223, -0.58778524), (-0.5590172, 0.3403223, -0.769421), (-0.21168806, 0.30891442, -0.65150875), (0.21168895, 0.30891442, -0.65150875), (0.5542085, 0.30891442, -0.40265477), (0.6850363, 0.30891442, 0), (0.5542085, 0.30891442, 0.40265414), (0.21168895, 0.30891442, 0.6515085), (-0.21168806, 0.30891442, 0.6515085), (-0.55420667, 0.30891442, 0.40265414), (-0.6850372, 0.30891442, 0), (-0.55420667, 0.30891442, -0.40265453), (-0.38294736, 0.30891442, -0.5270816), (-0.25395614, 0.31951904, -0.7815964), (0.25395662, 0.31951904, -0.7815964), (0.66486764, 0.31951904, -0.48305342), (0.8218187, 0.31951904, 0), (0.66486764, 0.31951904, 0.4830528), (0.25395662, 0.31951904, 0.7815961), (-0.25395614, 0.31951904, 0.7815961), (-0.66486573, 0.31951904, 0.4830528), (-0.8218192, 0.31951904, 0), (-0.66486573, 0.31951904, -0.4830531), (-0.45941094, 0.31951904, -0.63232476), (-0.15760021, 0.29534435, -0.48504364), (0.15760161, 0.29534435, -0.48504364), (0.41260493, 0.29534435, -0.2997736), (0.5100043, 0.29534435, 0), (0.41260493, 0.29534435, 0.29977295), (0.15760161, 0.29534435, 0.4850434), (-0.15760021, 0.29534435, 0.4850434), (-0.41260308, 0.29534435, 0.29977295), (-0.5100057, 0.29534435, 0), (-0.41260308, 0.29534435, -0.29977348), (-0.2919209, 0.29534435, -0.38745403), (-0.103551865, 0.2533297, -0.31870008), (0.103527024, 0.2533297, -0.31883314), (0.27121797, 0.2533297, -0.19699901), (0.33510017, 0.2533297, 0), (0.2711048, 0.2533297, 0.19696689), (0.10355377, 0.2533297, 0.31869984), (-0.103551865, 0.2533297, 0.31869984), (-0.2711029, 0.2533297, 0.19696689), (-0.33510208, 0.2533297, 0), (-0.2711029, 0.2533297, -0.1969676), (-0.18732738, 0.2533297, -0.25783384), (1, 0.98187983, 0), (0.8090191, 0.98187983, 0.5877851), (0.30901718, 0.98187983, 0.9510565), (-0.30901718, 0.98187983, 0.9510565), (-0.8090172, 0.98187983, 0.5877851), (-1, 0.98187983, 0), (-0.8090172, 0.98187983, -0.58778524), (-0.30901718, 0.98187983, -0.9510567), (0.30901718, 0.98187983, -0.9510567), (0.8090191, 0.98187983, -0.5877857), (-0.5590172, 0.98187983, -0.769421)]
                color3f[] primvars:displayColor = [(0.0056499722, 0.0056499722, 0.0056499722)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0.3125), (0.4, 0.3125), (0.40000004, 0.31282803), (0.37500003, 0.31282803), (0.425, 0.3125), (0.425, 0.31282803), (0.43953425, 0.31282803), (0.43953425, 0.3125), (0.45000002, 0.3125), (0.45000002, 0.31282803), (0.47500002, 0.3125), (0.47500002, 0.31282803), (0.5, 0.3125), (0.5, 0.31282803), (0.525, 0.3125), (0.525, 0.31282803), (0.54999995, 0.3125), (0.54999995, 0.31282803), (0.5749999, 0.3125), (0.5749999, 0.31282803), (0.5999999, 0.3125), (0.5999999, 0.31282803), (0.6249999, 0.3125), (0.6249999, 0.31282803), (0.375, 0.43781328), (0.4, 0.43781328), (0.40000004, 0.47077733), (0.375, 0.47077733), (0.425, 0.43781328), (0.425, 0.47077733), (0.45000005, 0.47077733), (0.43851748, 0.47077733), (0.43953425, 0.43781328), (0.45000002, 0.43781328), (0.47500002, 0.43781328), (0.47500002, 0.47077733), (0.5, 0.43781328), (0.5, 0.47077733), (0.525, 0.43781328), (0.525, 0.47077733), (0.54999995, 0.43781328), (0.54999995, 0.47077733), (0.5749999, 0.43781328), (0.5749999, 0.47077733), (0.5999999, 0.43781328), (0.5999999, 0.47077733), (0.6249999, 0.43781328), (0.6249999, 0.47077733), (0.375, 0.56312656), (0.4, 0.56312656), (0.4, 0.5644403), (0.375, 0.5644403), (0.425, 0.56312656), (0.425, 0.5644403), (0.45000002, 0.5644403), (0.4375, 0.5644403), (0.43953425, 0.56312656), (0.45000002, 0.56312656), (0.47500002, 0.56312656), (0.47500002, 0.5644403), (0.5, 0.56312656), (0.5, 0.5644403), (0.525, 0.56312656), (0.525, 0.5644403), (0.54999995, 0.56312656), (0.54999995, 0.5644403), (0.5749999, 0.56312656), (0.5749999, 0.5644403), (0.5999999, 0.56312656), (0.5999999, 0.5644403), (0.6249999, 0.56312656), (0.6249999, 0.5644403), (0.5482839, 0.007647395), (0.62640893, 0.064408526), (0.5, 0.15), (0.45171607, 0.00764741), (0.37359107, 0.064408556), (0.40629655, 0.04064662), (0.34375, 0.15625), (0.37359107, 0.24809146), (0.4517161, 0.3048526), (0.54828393, 0.3048526), (0.62640893, 0.24809146), (0.65625, 0.15625), (0.62640893, 0.93559146), (0.54828393, 0.9923526), (0.5, 0.8375), (0.4517161, 0.9923526), (0.40629655, 0.9593534), (0.37359107, 0.93559146), (0.34375, 0.84375), (0.37359107, 0.75190854), (0.45171607, 0.6951474), (0.5482839, 0.6951474), (0.62640893, 0.75190854), (0.65625, 0.84375), (0.41265357, 0.036027983), (0.6264089, 0.064408526), (0.5482838, 0.007647395), (0.34374997, 0.15625), (0.5482839, 0.3048526), (0.6264089, 0.24809146), (0.45000002, 0.4349459), (0.4375, 0.4349459), (0.425, 0.4349459), (0.4, 0.4349459), (0.375, 0.4349459), (0.6249999, 0.4349459), (0.5999999, 0.4349459), (0.5749999, 0.4349459), (0.54999995, 0.4349459), (0.525, 0.4349459), (0.5, 0.4349459), (0.47500002, 0.4349459), (0.425, 0.6850338), (0.4, 0.6850338), (0.375, 0.6850338), (0.6249999, 0.6850338), (0.5999999, 0.6850338), (0.5749999, 0.6850338), (0.54999995, 0.6850338), (0.525, 0.6850338), (0.5, 0.6850338), (0.47500002, 0.6850338), (0.45000002, 0.6850338), (0.4375, 0.6850338), (0.4, 0.5037655), (0.425, 0.5037655), (0.425, 0.52954483), (0.4, 0.52954483), (0.375, 0.5037655), (0.375, 0.52954483), (0.5999999, 0.5037655), (0.6249999, 0.5037655), (0.6249999, 0.52954483), (0.5999999, 0.52954483), (0.5749999, 0.5037655), (0.5749999, 0.52954483), (0.54999995, 0.5037655), (0.54999995, 0.52954483), (0.525, 0.5037655), (0.525, 0.52954483), (0.5, 0.5037655), (0.5, 0.52954483), (0.47500002, 0.5037655), (0.47500002, 0.52954483), (0.45000002, 0.5037655), (0.45, 0.52954483), (0.4375, 0.52954483), (0.4375, 0.5037655), (0.5999999, 0.68843985), (0.5749999, 0.68843985), (0.54999995, 0.68843985), (0.525, 0.68843985), (0.5, 0.68843985), (0.47500002, 0.68843985), (0.45000002, 0.68843985), (0.43953425, 0.68843985), (0.425, 0.68843985), (0.4, 0.68843985), (0.375, 0.68843985), (0.6249999, 0.68843985)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 6, 5, 4, 7, 8, 9, 8, 10, 11, 9, 10, 12, 13, 11, 12, 14, 15, 13, 14, 16, 17, 15, 16, 18, 19, 17, 18, 20, 21, 19, 20, 22, 23, 21, 24, 25, 26, 27, 25, 28, 29, 26, 30, 31, 32, 33, 33, 34, 35, 30, 34, 36, 37, 35, 36, 38, 39, 37, 38, 40, 41, 39, 40, 42, 43, 41, 42, 44, 45, 43, 44, 46, 47, 45, 48, 49, 50, 51, 49, 52, 53, 50, 54, 55, 56, 57, 57, 58, 59, 54, 58, 60, 61, 59, 60, 62, 63, 61, 62, 64, 65, 63, 64, 66, 67, 65, 66, 68, 69, 67, 68, 70, 71, 69, 72, 73, 74, 75, 72, 74, 76, 77, 75, 74, 78, 76, 74, 79, 78, 74, 80, 79, 74, 81, 80, 74, 82, 81, 74, 83, 82, 74, 73, 83, 74, 84, 85, 86, 85, 87, 86, 87, 88, 89, 86, 89, 90, 86, 90, 91, 86, 91, 92, 86, 92, 93, 86, 93, 94, 86, 94, 95, 86, 95, 84, 86, 72, 73, 73, 72, 75, 72, 72, 75, 77, 75, 75, 96, 78, 76, 76, 78, 79, 78, 78, 79, 80, 79, 79, 80, 81, 80, 80, 81, 82, 81, 81, 82, 83, 82, 82, 83, 73, 83, 83, 73, 72, 73, 97, 98, 75, 72, 98, 75, 77, 75, 75, 96, 78, 76, 76, 99, 79, 78, 99, 79, 80, 79, 79, 80, 81, 80, 80, 100, 82, 81, 100, 101, 83, 82, 101, 83, 73, 83, 83, 97, 102, 103, 6, 9, 2, 5, 104, 105, 3, 2, 105, 106, 21, 23, 107, 108, 19, 21, 108, 109, 17, 19, 109, 110, 15, 17, 110, 111, 13, 15, 111, 112, 11, 13, 112, 113, 9, 11, 113, 102, 75, 72, 72, 75, 76, 96, 75, 75, 77, 76, 78, 76, 76, 78, 79, 78, 78, 79, 80, 79, 79, 80, 81, 80, 80, 81, 82, 81, 81, 82, 83, 82, 82, 83, 73, 83, 83, 73, 72, 73, 73, 72, 77, 96, 76, 76, 83, 101, 82, 83, 97, 83, 83, 73, 98, 97, 73, 72, 75, 98, 72, 75, 76, 96, 75, 75, 77, 76, 99, 76, 76, 78, 79, 99, 78, 79, 80, 79, 79, 80, 100, 80, 80, 81, 101, 100, 81, 82, 77, 96, 76, 76, 50, 53, 114, 115, 51, 50, 115, 116, 69, 71, 117, 118, 67, 69, 118, 119, 65, 67, 119, 120, 63, 65, 120, 121, 61, 63, 121, 122, 59, 61, 122, 123, 54, 59, 123, 124, 124, 125, 55, 54, 55, 53, 52, 56, 126, 127, 128, 129, 130, 126, 129, 131, 132, 133, 134, 135, 136, 132, 135, 137, 138, 136, 137, 139, 140, 138, 139, 141, 142, 140, 141, 143, 144, 142, 143, 145, 146, 144, 145, 147, 147, 148, 149, 146, 31, 29, 28, 32, 129, 128, 52, 49, 131, 129, 49, 48, 135, 134, 70, 68, 137, 135, 68, 66, 139, 137, 66, 64, 141, 139, 64, 62, 143, 141, 62, 60, 145, 143, 60, 58, 147, 145, 58, 57, 56, 52, 128, 148, 147, 57, 148, 128, 127, 149, 26, 29, 127, 126, 27, 26, 126, 130, 45, 47, 133, 132, 43, 45, 132, 136, 41, 43, 136, 138, 39, 41, 138, 140, 37, 39, 140, 142, 35, 37, 142, 144, 30, 35, 144, 146, 146, 149, 31, 30, 149, 127, 29, 31, 105, 104, 28, 25, 106, 105, 25, 24, 108, 107, 46, 44, 109, 108, 44, 42, 110, 109, 42, 40, 111, 110, 40, 38, 112, 111, 38, 36, 113, 112, 36, 34, 102, 113, 34, 33, 32, 28, 104, 103, 102, 33, 103, 104, 5, 6, 119, 118, 150, 151, 120, 119, 151, 152, 121, 120, 152, 153, 122, 121, 153, 154, 123, 122, 154, 155, 124, 123, 155, 156, 157, 158, 114, 125, 124, 156, 115, 114, 158, 159, 116, 115, 159, 160, 118, 117, 161, 150, 125, 114, 53, 55]
                float3 xformOp:rotateXYZ = (90, 90, 0)
                float3 xformOp:scale = (0.16435777, 2.1872163, 0.16435777)
                double3 xformOp:translate = (-3.039193802034866, 0.382030845247315, 4.288241912137652)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        def Mesh "Cockpit"
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.5, -0.09869376, -0.5), (0.83989626, 0.21323039, 0.5)]
            int[] faceVertexCounts = [4, 4, 3, 4, 4, 4, 4, 4, 3, 4, 3, 3, 4, 4, 3, 4, 4, 4, 4, 4, 3, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 46, 47, 76, 77, 78, 79, 20, 22, 21, 60, 61, 62, 63, 68, 69, 70, 71, 21, 22, 26, 25, 52, 53, 54, 55, 84, 85, 86, 87, 25, 26, 29, 36, 37, 38, 39, 20, 30, 22, 29, 26, 31, 0, 4, 5, 1, 1, 5, 6, 2, 2, 6, 7, 4, 8, 9, 5, 5, 9, 10, 6, 6, 10, 11, 7, 8, 12, 13, 9, 9, 13, 14, 10, 10, 14, 11, 0, 12, 8, 4, 2, 7, 3, 14, 15, 11, 0, 1, 17, 16, 1, 2, 20, 17, 7, 11, 26, 22, 13, 12, 28, 27, 14, 13, 27, 29, 12, 0, 16, 28, 2, 3, 30, 20, 3, 7, 22, 30, 11, 15, 31, 26, 15, 14, 29, 31, 16, 19, 33, 32, 19, 24, 34, 33, 24, 28, 35, 34, 28, 16, 32, 35, 32, 33, 37, 36, 33, 34, 38, 37, 34, 35, 39, 38, 35, 32, 36, 39, 16, 17, 41, 40, 17, 18, 42, 41, 18, 19, 43, 42, 19, 16, 40, 43, 40, 41, 45, 44, 41, 42, 46, 45, 42, 43, 47, 46, 43, 40, 44, 47, 24, 23, 49, 48, 23, 27, 50, 49, 27, 28, 51, 50, 28, 24, 48, 51, 48, 49, 53, 52, 49, 50, 54, 53, 50, 51, 55, 54, 51, 48, 52, 55, 19, 18, 57, 56, 18, 23, 58, 57, 23, 24, 59, 58, 24, 19, 56, 59, 56, 57, 61, 60, 57, 58, 62, 61, 58, 59, 63, 62, 59, 56, 60, 63, 18, 21, 65, 64, 21, 25, 66, 65, 25, 23, 67, 66, 23, 18, 64, 67, 64, 65, 69, 68, 65, 66, 70, 69, 66, 67, 71, 70, 67, 64, 68, 71, 17, 20, 73, 72, 20, 21, 74, 73, 21, 18, 75, 74, 18, 17, 72, 75, 72, 73, 77, 76, 73, 74, 78, 77, 74, 75, 79, 78, 75, 72, 76, 79, 23, 25, 81, 80, 25, 29, 82, 81, 29, 27, 83, 82, 27, 23, 80, 83, 80, 81, 85, 84, 81, 82, 86, 85, 82, 83, 87, 86, 83, 80, 84, 87]
            point3f[] points = [(-0.5, -0.09869376, 0.28527987), (-0.16666666, -0.032666683, 0.5), (0.16666669, -0.032666683, 0.5), (0.7946289, 0.0071767867, 0.5), (-0.38355225, 0.05648543, 0.16666666), (-0.07706138, 0.18123327, 0.2859046), (0.3105281, 0.18123327, 0.13663882), (0.83989626, 0.0071767867, 0.16666666), (-0.38355225, 0.05648543, -0.16666669), (-0.07706138, 0.18123327, -0.28590462), (0.3105281, 0.18123327, -0.13663885), (0.83989626, 0.0071767867, -0.16666669), (-0.5, -0.09869376, -0.28527987), (-0.16666675, -0.032666355, -0.49999997), (0.16666679, -0.032666817, -0.4999997), (0.7946289, 0.0071767867, -0.5), (-0.48862135, -0.061775714, 0.28026536), (-0.16114739, 0.0030903518, 0.49121082), (-0.073117204, 0.21323027, 0.28087854), (-0.3742205, 0.0906754, 0.16373694), (0.16632651, 0.0030903518, 0.49121082), (0.30765906, 0.21323039, 0.13423693), (0.82851756, 0.013657566, 0.16373694), (-0.07311723, 0.21323039, -0.2808789), (-0.3742205, 0.0906754, -0.16373697), (0.30765906, 0.21323039, -0.13423696), (0.82851756, 0.013657566, -0.16373697), (-0.16114739, 0.0030903518, -0.49121082), (-0.4886213, -0.061776057, -0.28026512), (0.16632651, 0.0030903518, -0.49121082), (0.7832502, 0.0075615942, 0.49121082), (0.7832502, 0.0075615942, -0.49121082), (-0.48547384, -0.057581306, 0.261581), (-0.37869963, 0.08470644, 0.15282114), (-0.37869963, 0.08470644, -0.15282117), (-0.48547378, -0.05758159, -0.26158077), (-0.47872597, -0.06264497, 0.261581), (-0.3719518, 0.07964276, 0.15282114), (-0.3719518, 0.07964276, -0.15282117), (-0.47872594, -0.06264526, -0.26158077), (-0.47393548, -0.05369419, 0.28240517), (-0.16802023, 0.0069015324, 0.4794634), (-0.085785374, 0.20320727, 0.28297797), (-0.36706603, 0.088720575, 0.17354822), (-0.466968, -0.06420496, 0.27506053), (-0.16105272, -0.003609255, 0.47211874), (-0.07881786, 0.19269653, 0.27563334), (-0.3600985, 0.07820977, 0.16620359), (-0.36697546, 0.08869581, -0.17367244), (-0.08594575, 0.20308046, -0.2830049), (-0.16810724, 0.0069497675, -0.47931474), (-0.47374958, -0.05359222, -0.28243205), (-0.36309215, 0.082837716, -0.16957895), (-0.08206244, 0.19722234, -0.27891144), (-0.16422395, 0.0010916889, -0.47522125), (-0.46986628, -0.05945033, -0.27833858), (-0.36557698, 0.0941935, 0.15555008), (-0.07952882, 0.2106206, 0.26683462), (-0.079528846, 0.21062078, -0.26683497), (-0.36557698, 0.0941935, -0.15555014), (-0.36209908, 0.08564879, 0.15555008), (-0.076050974, 0.20207591, 0.26683462), (-0.076051, 0.20207606, -0.26683497), (-0.36209908, 0.08564879, -0.15555014), (-0.06268579, 0.21323027, 0.26215333), (0.29270536, 0.21323039, 0.1252878), (0.29270536, 0.21323039, -0.12528785), (-0.06268581, 0.21323039, -0.26215363), (-0.06268579, 0.2023757, 0.26215333), (0.29270536, 0.20237581, 0.1252878), (0.29270536, 0.20237581, -0.12528785), (-0.06268581, 0.20237581, -0.26215363), (-0.14917617, 0.008629188, 0.48357663), (0.16192405, 0.008629188, 0.48357663), (0.29618996, 0.20826225, 0.14445145), (-0.06554749, 0.20826213, 0.28376096), (-0.15091641, -0.001766473, 0.4751716), (0.1601838, -0.001766473, 0.4751716), (0.29444972, 0.19786654, 0.13604641), (-0.067287736, 0.19786642, 0.2753559), (-0.06302427, 0.2066062, -0.28472215), (0.29236695, 0.2066062, -0.14785632), (0.16045655, 0.010475472, -0.4810319), (-0.14518575, 0.010475472, -0.4810319), (-0.0649932, 0.19484441, -0.2752126), (0.290398, 0.19484441, -0.13834676), (0.15848762, -0.0012862533, -0.47152236), (-0.14715469, -0.0012862533, -0.47152236)]
            color3f[] primvars:displayColor = [(0.00035979215, 0.00035979215, 0.00035979215), (0.011566324, 0.021502113, 0.02943908)] (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
                interpolation = "uniform"
            )
            int[] primvars:displayColor:indices = [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1]
            float[] primvars:displayOpacity = [1, 0.8811189] (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
                interpolation = "uniform"
            )
            int[] primvars:displayOpacity:indices = [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1]
            float2[] primvars:st = [(0, 0), (0.33333334, 0), (0.33333334, 0.33333334), (0, 0.33333334), (0.6666667, 0), (0.6666667, 0.33333334), (1, 0.33333334), (0.33333334, 0.6666667), (0, 0.6666667), (0.6666667, 0.6666667), (1, 0.6666667), (0.33333334, 1), (0, 1), (0.6666667, 1), (0.4308799, 0), (0.87743723, 0.5842216), (0.76436293, 1), (1, 0), (1, 1)] (
                interpolation = "faceVarying"
            )
            int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 4, 6, 5, 3, 2, 7, 8, 2, 5, 9, 7, 5, 6, 10, 9, 8, 7, 11, 12, 7, 9, 13, 11, 9, 10, 13, 0, 14, 15, 16, 4, 17, 6, 13, 10, 18, 0, 3, 2, 1, 1, 2, 5, 4, 4, 5, 6, 3, 8, 7, 2, 2, 7, 9, 5, 5, 9, 10, 6, 8, 12, 11, 7, 7, 11, 13, 9, 9, 13, 10, 0, 16, 15, 14, 4, 6, 17, 13, 18, 10, 0, 1, 1, 0, 1, 4, 4, 1, 6, 10, 10, 6, 11, 12, 12, 11, 13, 11, 11, 13, 16, 0, 0, 16, 4, 17, 17, 4, 17, 6, 6, 17, 10, 18, 18, 10, 18, 13, 13, 18, 0, 14, 14, 0, 14, 15, 15, 14, 15, 16, 16, 15, 16, 0, 0, 16, 0, 14, 14, 0, 14, 15, 15, 14, 15, 16, 16, 15, 16, 0, 0, 16, 0, 1, 1, 0, 1, 2, 2, 1, 2, 3, 3, 2, 3, 0, 0, 3, 0, 1, 1, 0, 1, 2, 2, 1, 2, 3, 3, 2, 3, 0, 0, 3, 8, 7, 7, 8, 7, 11, 11, 7, 11, 12, 12, 11, 12, 8, 8, 12, 8, 7, 7, 8, 7, 11, 11, 7, 11, 12, 12, 11, 12, 8, 8, 12, 3, 2, 2, 3, 2, 7, 7, 2, 7, 8, 8, 7, 8, 3, 3, 8, 3, 2, 2, 3, 2, 7, 7, 2, 7, 8, 8, 7, 8, 3, 3, 8, 2, 5, 5, 2, 5, 9, 9, 5, 9, 7, 7, 9, 7, 2, 2, 7, 2, 5, 5, 2, 5, 9, 9, 5, 9, 7, 7, 9, 7, 2, 2, 7, 1, 4, 4, 1, 4, 5, 5, 4, 5, 2, 2, 5, 2, 1, 1, 2, 1, 4, 4, 1, 4, 5, 5, 4, 5, 2, 2, 5, 2, 1, 1, 2, 7, 9, 9, 7, 9, 13, 13, 9, 13, 11, 11, 13, 11, 7, 7, 11, 7, 9, 9, 7, 9, 13, 13, 9, 13, 11, 11, 13, 11, 7, 7, 11]
            uniform token subsetFamily:materialBind:familyType = "partition"
            float3 xformOp:scale = (5.5105286, 5.5105286, 5.5105286)
            double3 xformOp:translate = (0, 1.245990124413675, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:scale"]

            def GeomSubset "Comonents_DarkSG"
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [2, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 50, 51, 52, 53, 58, 59, 60, 61, 66, 67, 68, 69, 74, 75, 76, 77, 82, 83, 84, 85]
                rel material:binding = </Fighters_Base/Looks/Comonents_DarkSG>
            }

            def GeomSubset "Cockpit_WindowSG"
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 3, 4, 6, 7, 9, 38, 39, 40, 41, 46, 47, 48, 49, 54, 55, 56, 57, 62, 63, 64, 65, 70, 71, 72, 73, 78, 79, 80, 81, 86, 87, 88, 89]
                rel material:binding = </Fighters_Base/Looks/Cockpit_WindowSG>
            }
        }

        def Mesh "Body"
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-4.742693, -0.6171317, -10.449879), (10.333401, 1.5012141, 10.449879)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 4, 5, 1, 1, 5, 6, 2, 2, 6, 7, 3, 4, 8, 9, 5, 5, 9, 10, 6, 6, 10, 11, 7, 8, 12, 13, 9, 9, 13, 14, 10, 10, 14, 15, 11, 16, 20, 21, 17, 17, 21, 22, 18, 18, 22, 23, 19, 20, 24, 25, 21, 21, 25, 26, 22, 22, 26, 27, 23, 24, 28, 29, 25, 25, 29, 30, 26, 26, 30, 31, 27, 14, 18, 19, 15, 13, 17, 18, 14, 3, 31, 30, 2, 2, 30, 29, 1, 12, 16, 17, 13, 8, 20, 16, 12, 4, 24, 20, 8, 0, 28, 24, 4, 1, 29, 28, 0, 40, 41, 42, 43, 45, 44, 46, 47, 44, 45, 43, 42, 15, 19, 33, 32, 19, 23, 34, 33, 11, 15, 32, 35, 27, 31, 38, 36, 31, 3, 39, 38, 3, 7, 37, 39, 7, 11, 35, 37, 23, 27, 36, 34, 32, 33, 41, 40, 33, 34, 42, 41, 35, 32, 40, 43, 36, 38, 46, 44, 38, 39, 47, 46, 39, 37, 45, 47, 37, 35, 43, 45, 34, 36, 44, 42]
            point3f[] points = [(-4.742693, 0.1683569, -1.761037), (-1.5808976, 0.89480436, -4.742693), (1.5808978, 0.8927169, -7.1567082), (10.333401, -0.5331726, -10.449879), (-4.742693, 0.16835666, -1.5808976), (-1.5808976, 1.0967815, -1.5808976), (1.5808978, 1.2786345, -1.5808976), (6.8845997, 1.5012141, -3.192218), (-4.742693, 0.16835713, 1.5808978), (-1.5808976, 1.0967815, 1.5808978), (1.5808978, 1.2786345, 1.5808978), (6.8845997, 1.5012141, 3.1922183), (-4.742693, 0.1683569, 1.761037), (-1.5808976, 0.89480436, 4.742693), (1.5808978, 0.8927169, 7.1567082), (10.333401, -0.5331726, 10.449879), (-4.742693, -1.0530894e-15, 1.761037), (-1.5808976, 0.82843435, 4.742693), (1.5808978, 0.82843435, 7.1567082), (10.333401, -0.6171317, 10.449879), (-4.742693, -3.5102978e-16, 1.5808976), (-1.5808976, -3.5102978e-16, 1.5808976), (1.5808978, -3.5102978e-16, 1.5808976), (6.8845997, -0.40052792, 3.192218), (-4.742693, 3.5102983e-16, -1.5808978), (-1.5808976, 3.5102983e-16, -1.5808978), (1.5808978, 3.5102983e-16, -1.5808978), (6.8845997, -0.40052792, -3.1922183), (-4.742693, 1.0530894e-15, -1.761037), (-1.5808976, 0.82843435, -4.742693), (1.5808978, 0.82843435, -7.1567082), (10.333401, -0.6171317, -10.449879), (10.112251, -0.46510684, 9.984491), (10.112251, -0.53927064, 9.984491), (6.975205, -0.31876516, 3.196675), (6.975205, 1.361107, 3.1966753), (6.975205, -0.31876513, -3.1966753), (6.975205, 1.361107, -3.196675), (10.112251, -0.53927064, -9.984491), (10.112251, -0.4651068, -9.984491), (9.7625265, -0.46510684, 9.984491), (9.7625265, -0.53927064, 9.984491), (6.6254807, -0.31876516, 3.196675), (6.6254807, 1.361107, 3.1966753), (6.6254807, -0.31876513, -3.1966753), (6.6254807, 1.361107, -3.196675), (9.7625265, -0.53927064, -9.984491), (9.7625265, -0.4651068, -9.984491)]
            color3f[] primvars:displayColor = [(0.00035979215, 0.00035979215, 0.00035979215), (0.13320851, 0, 0)] (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
                interpolation = "uniform"
            )
            int[] primvars:displayColor:indices = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
            float[] primvars:displayOpacity = [1, 1] (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
                interpolation = "uniform"
            )
            int[] primvars:displayOpacity:indices = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
            float2[] primvars:st = [(0, 0), (0, 0.33333334), (0.33333334, 0.33333334), (0.33333334, 0), (0.6666667, 0.33333334), (0.6666667, 0), (1, 0.33333334), (1, 0), (0, 0.6666667), (0.33333334, 0.6666667), (0.6666667, 0.6666667), (1, 0.6666667), (0, 1), (0.33333334, 1), (0.6666667, 1), (1, 1), (0, 0.12762524), (0.99999994, 0.12762524), (0.99999994, 0), (0, 0.10143934), (1, 0.10143934), (0.012629859, 3.7761083e-16), (0, 0.033486012), (0.9697282, 0.08026069), (0, 0.9345925), (0.0000011503905, 0), (1, 0.0000026470454), (0.99999756, 0.9345938), (9.146671e-8, 0.05324747), (0, 3.0162428e-7), (1, 0.053247318), (0, 0.9345911), (0.0000024739047, 0), (1, 0.0000026470386), (0.99999887, 0.9345925), (0.030271778, 0.08026069), (0.99999994, 0.033486012), (0.98737013, 3.3040947e-16), (0.0079774335, 0), (0, 0.040495355), (0.9624037, 0.19084753), (0.99999994, 3.6338137e-16), (0.037596267, 0.19084752), (1, 0.040495355), (0.9920226, 0), (3.7343714e-8, 0.29787156), (1, 0.29787156)] (
                interpolation = "faceVarying"
            )
            int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 1, 8, 9, 2, 2, 9, 10, 4, 4, 10, 11, 6, 8, 12, 13, 9, 9, 13, 14, 10, 10, 14, 15, 11, 0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 1, 8, 9, 2, 2, 9, 10, 4, 4, 10, 11, 6, 8, 12, 13, 9, 9, 13, 14, 10, 10, 14, 15, 11, 0, 16, 17, 18, 19, 0, 7, 20, 16, 0, 18, 17, 19, 0, 7, 20, 21, 22, 23, 18, 24, 25, 26, 27, 28, 29, 18, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 0, 45, 46, 18, 38, 39, 39, 38, 39, 40, 40, 39, 41, 38, 38, 41, 42, 43, 43, 42, 43, 44, 44, 43, 44, 0, 0, 44, 45, 46, 46, 45, 18, 0, 0, 18, 38, 39, 39, 38, 39, 40, 40, 39, 41, 38, 38, 41, 42, 43, 43, 42, 43, 44, 44, 43, 44, 0, 0, 44, 45, 46, 46, 45, 18, 0, 0, 18]
            uniform token subsetFamily:materialBind:familyType = "partition"
            double3 xformOp:translate = (0, 0.14702247084867093, 0)
            float3 xformOp:translate:pivot = (0, 1.605746, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "!invert!xformOp:translate:pivot"]

            def GeomSubset "PaintSG"
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37]
                rel material:binding = </Fighters_Base/Looks/PaintSG>
            }

            def GeomSubset "Comonents_DarkSG"
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [27, 28, 29, 38, 39, 40, 41, 42, 43, 44, 45]
                rel material:binding = </Fighters_Base/Looks/Comonents_DarkSG>
            }
        }

        def Xform "Thrusters"
        {
            def Mesh "Thruster_L"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-1.0000001, -1.000001, -0.9510566), (1, 0.99999857, 0.95105666)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 11, 10, 1, 2, 12, 11, 2, 3, 13, 12, 3, 4, 14, 13, 4, 5, 15, 14, 5, 6, 16, 15, 6, 7, 17, 16, 7, 8, 18, 17, 8, 9, 19, 18, 9, 0, 10, 19, 32, 31, 33, 34, 32, 33, 35, 34, 33, 36, 35, 33, 37, 36, 33, 38, 37, 33, 39, 38, 33, 40, 39, 33, 41, 40, 33, 31, 41, 33, 10, 11, 20, 11, 12, 20, 12, 13, 20, 13, 14, 20, 14, 15, 20, 15, 16, 20, 16, 17, 20, 17, 18, 20, 18, 19, 20, 19, 10, 20, 1, 0, 21, 22, 2, 1, 22, 23, 3, 2, 23, 24, 4, 3, 24, 25, 5, 4, 25, 26, 6, 5, 26, 27, 7, 6, 27, 28, 8, 7, 28, 29, 9, 8, 29, 30, 0, 9, 30, 21, 22, 21, 31, 32, 23, 22, 32, 34, 24, 23, 34, 35, 25, 24, 35, 36, 26, 25, 36, 37, 27, 26, 37, 38, 28, 27, 38, 39, 29, 28, 39, 40, 30, 29, 40, 41, 21, 30, 41, 31]
                rel material:binding = </Fighters_Base/Looks/Comonents_DarkSG>
                point3f[] points = [(0.80901706, -1.000001, -0.5877853), (0.30901694, -1.000001, -0.9510566), (-0.30901715, -1.000001, -0.95105654), (-0.8090172, -1.000001, -0.5877851), (-1.0000001, -1.000001, 1.1920929e-7), (-0.80901706, -1.000001, 0.5877854), (-0.30901697, -1.000001, 0.95105666), (0.30901703, -1.000001, 0.95105666), (0.809017, -1.000001, 0.5877853), (1, -1.000001, 1.1920929e-7), (0.80901706, 0.99999857, -0.5877853), (0.30901694, 0.99999857, -0.9510566), (-0.30901715, 0.99999857, -0.95105654), (-0.8090172, 0.99999857, -0.5877851), (-1.0000001, 0.99999857, 1.1920929e-7), (-0.80901706, 0.99999857, 0.5877854), (-0.30901697, 0.99999857, 0.95105666), (0.30901703, 0.99999857, 0.95105666), (0.809017, 0.99999857, 0.5877853), (1, 0.99999857, 1.1920929e-7), (0, 0.99999857, 1.1920929e-7), (0.6960421, -1.000001, -0.5057042), (0.26586437, -1.000001, -0.8182467), (-0.26586458, -1.000001, -0.81824654), (-0.69604224, -1.000001, -0.5057041), (-0.86035544, -1.000001, 1.1920929e-7), (-0.6960421, -1.000001, 0.50570434), (-0.2658644, -1.000001, 0.8182468), (0.26586446, -1.000001, 0.8182468), (0.69604206, -1.000001, 0.50570434), (0.8603554, -1.000001, 1.1920929e-7), (0.6960421, -0.42039323, -0.5057042), (0.26586437, -0.42039323, -0.8182467), (-8.83025e-30, -0.42039323, 1.1920926e-7), (-0.26586458, -0.42039323, -0.81824654), (-0.69604224, -0.42039323, -0.5057041), (-0.86035544, -0.42039323, 1.1920926e-7), (-0.6960421, -0.42039323, 0.50570434), (-0.2658644, -0.42039323, 0.8182468), (0.26586446, -0.42039323, 0.8182468), (0.69604206, -0.42039323, 0.50570434), (0.8603554, -0.42039323, 1.1920926e-7)]
                color3f[] primvars:displayColor = [(0.00035979215, 0.00035979215, 0.00035979215)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0.3125), (0.4, 0.3125), (0.4, 0.68843985), (0.375, 0.68843985), (0.425, 0.3125), (0.425, 0.68843985), (0.45000002, 0.3125), (0.45000002, 0.68843985), (0.47500002, 0.3125), (0.47500002, 0.68843985), (0.5, 0.3125), (0.5, 0.68843985), (0.525, 0.3125), (0.525, 0.68843985), (0.54999995, 0.3125), (0.54999995, 0.68843985), (0.5749999, 0.3125), (0.5749999, 0.68843985), (0.5999999, 0.3125), (0.5999999, 0.68843985), (0.6249999, 0.3125), (0.6249999, 0.68843985), (0.5482839, 0.007647395), (0.62640893, 0.064408526), (0.5, 0.15), (0.45171607, 0.00764741), (0.37359107, 0.064408556), (0.34375, 0.15625), (0.37359107, 0.24809146), (0.4517161, 0.3048526), (0.54828393, 0.3048526), (0.62640893, 0.24809146), (0.65625, 0.15625), (0.62640893, 0.93559146), (0.54828393, 0.9923526), (0.5, 0.8375), (0.4517161, 0.9923526), (0.37359107, 0.93559146), (0.34375, 0.84375), (0.37359107, 0.75190854), (0.45171607, 0.6951474), (0.5482839, 0.6951474), (0.62640893, 0.75190854), (0.65625, 0.84375)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 4, 6, 7, 5, 6, 8, 9, 7, 8, 10, 11, 9, 10, 12, 13, 11, 12, 14, 15, 13, 14, 16, 17, 15, 16, 18, 19, 17, 18, 20, 21, 19, 22, 23, 24, 25, 22, 24, 26, 25, 24, 27, 26, 24, 28, 27, 24, 29, 28, 24, 30, 29, 24, 31, 30, 24, 32, 31, 24, 23, 32, 24, 33, 34, 35, 34, 36, 35, 36, 37, 35, 37, 38, 35, 38, 39, 35, 39, 40, 35, 40, 41, 35, 41, 42, 35, 42, 43, 35, 43, 33, 35, 22, 23, 23, 22, 25, 22, 22, 25, 26, 25, 25, 26, 27, 26, 26, 27, 28, 27, 27, 28, 29, 28, 28, 29, 30, 29, 29, 30, 31, 30, 30, 31, 32, 31, 31, 32, 23, 32, 32, 23, 22, 23, 23, 22, 25, 22, 22, 25, 26, 25, 25, 26, 27, 26, 26, 27, 28, 27, 27, 28, 29, 28, 28, 29, 30, 29, 29, 30, 31, 30, 30, 31, 32, 31, 31, 32, 23, 32, 32, 23]
                float3 xformOp:rotateXYZ = (-90, 90, 0)
                float3 xformOp:scale = (0.7345581, 0.7345581, 0.7345581)
                double3 xformOp:translate = (6.979489890406886, 0.518650686261112, 2.249638108415997)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "Thruster_R"
            {
                uniform bool doubleSided = 1
                float3[] extent = [(-1.0000001, -1.000001, -0.9510566), (1, 0.99999857, 0.95105666)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [0, 1, 11, 10, 1, 2, 12, 11, 2, 3, 13, 12, 3, 4, 14, 13, 4, 5, 15, 14, 5, 6, 16, 15, 6, 7, 17, 16, 7, 8, 18, 17, 8, 9, 19, 18, 9, 0, 10, 19, 32, 31, 33, 34, 32, 33, 35, 34, 33, 36, 35, 33, 37, 36, 33, 38, 37, 33, 39, 38, 33, 40, 39, 33, 41, 40, 33, 31, 41, 33, 10, 11, 20, 11, 12, 20, 12, 13, 20, 13, 14, 20, 14, 15, 20, 15, 16, 20, 16, 17, 20, 17, 18, 20, 18, 19, 20, 19, 10, 20, 1, 0, 21, 22, 2, 1, 22, 23, 3, 2, 23, 24, 4, 3, 24, 25, 5, 4, 25, 26, 6, 5, 26, 27, 7, 6, 27, 28, 8, 7, 28, 29, 9, 8, 29, 30, 0, 9, 30, 21, 22, 21, 31, 32, 23, 22, 32, 34, 24, 23, 34, 35, 25, 24, 35, 36, 26, 25, 36, 37, 27, 26, 37, 38, 28, 27, 38, 39, 29, 28, 39, 40, 30, 29, 40, 41, 21, 30, 41, 31]
                rel material:binding = </Fighters_Base/Looks/Comonents_DarkSG>
                point3f[] points = [(0.80901706, -1.000001, -0.5877853), (0.30901694, -1.000001, -0.9510566), (-0.30901715, -1.000001, -0.95105654), (-0.8090172, -1.000001, -0.5877851), (-1.0000001, -1.000001, 1.1920929e-7), (-0.80901706, -1.000001, 0.5877854), (-0.30901697, -1.000001, 0.95105666), (0.30901703, -1.000001, 0.95105666), (0.809017, -1.000001, 0.5877853), (1, -1.000001, 1.1920929e-7), (0.80901706, 0.99999857, -0.5877853), (0.30901694, 0.99999857, -0.9510566), (-0.30901715, 0.99999857, -0.95105654), (-0.8090172, 0.99999857, -0.5877851), (-1.0000001, 0.99999857, 1.1920929e-7), (-0.80901706, 0.99999857, 0.5877854), (-0.30901697, 0.99999857, 0.95105666), (0.30901703, 0.99999857, 0.95105666), (0.809017, 0.99999857, 0.5877853), (1, 0.99999857, 1.1920929e-7), (0, 0.99999857, 1.1920929e-7), (0.6960421, -1.000001, -0.5057042), (0.26586437, -1.000001, -0.8182467), (-0.26586458, -1.000001, -0.81824654), (-0.69604224, -1.000001, -0.5057041), (-0.86035544, -1.000001, 1.1920929e-7), (-0.6960421, -1.000001, 0.50570434), (-0.2658644, -1.000001, 0.8182468), (0.26586446, -1.000001, 0.8182468), (0.69604206, -1.000001, 0.50570434), (0.8603554, -1.000001, 1.1920929e-7), (0.6960421, -0.42039323, -0.5057042), (0.26586437, -0.42039323, -0.8182467), (-8.83025e-30, -0.42039323, 1.1920926e-7), (-0.26586458, -0.42039323, -0.81824654), (-0.69604224, -0.42039323, -0.5057041), (-0.86035544, -0.42039323, 1.1920926e-7), (-0.6960421, -0.42039323, 0.50570434), (-0.2658644, -0.42039323, 0.8182468), (0.26586446, -0.42039323, 0.8182468), (0.69604206, -0.42039323, 0.50570434), (0.8603554, -0.42039323, 1.1920926e-7)]
                color3f[] primvars:displayColor = [(0.00035979215, 0.00035979215, 0.00035979215)] (
                    customData = {
                        dictionary Maya = {
                            bool generated = 1
                        }
                    }
                )
                float2[] primvars:st = [(0.375, 0.3125), (0.4, 0.3125), (0.4, 0.68843985), (0.375, 0.68843985), (0.425, 0.3125), (0.425, 0.68843985), (0.45000002, 0.3125), (0.45000002, 0.68843985), (0.47500002, 0.3125), (0.47500002, 0.68843985), (0.5, 0.3125), (0.5, 0.68843985), (0.525, 0.3125), (0.525, 0.68843985), (0.54999995, 0.3125), (0.54999995, 0.68843985), (0.5749999, 0.3125), (0.5749999, 0.68843985), (0.5999999, 0.3125), (0.5999999, 0.68843985), (0.6249999, 0.3125), (0.6249999, 0.68843985), (0.5482839, 0.007647395), (0.62640893, 0.064408526), (0.5, 0.15), (0.45171607, 0.00764741), (0.37359107, 0.064408556), (0.34375, 0.15625), (0.37359107, 0.24809146), (0.4517161, 0.3048526), (0.54828393, 0.3048526), (0.62640893, 0.24809146), (0.65625, 0.15625), (0.62640893, 0.93559146), (0.54828393, 0.9923526), (0.5, 0.8375), (0.4517161, 0.9923526), (0.37359107, 0.93559146), (0.34375, 0.84375), (0.37359107, 0.75190854), (0.45171607, 0.6951474), (0.5482839, 0.6951474), (0.62640893, 0.75190854), (0.65625, 0.84375)] (
                    interpolation = "faceVarying"
                )
                int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 4, 6, 7, 5, 6, 8, 9, 7, 8, 10, 11, 9, 10, 12, 13, 11, 12, 14, 15, 13, 14, 16, 17, 15, 16, 18, 19, 17, 18, 20, 21, 19, 22, 23, 24, 25, 22, 24, 26, 25, 24, 27, 26, 24, 28, 27, 24, 29, 28, 24, 30, 29, 24, 31, 30, 24, 32, 31, 24, 23, 32, 24, 33, 34, 35, 34, 36, 35, 36, 37, 35, 37, 38, 35, 38, 39, 35, 39, 40, 35, 40, 41, 35, 41, 42, 35, 42, 43, 35, 43, 33, 35, 22, 23, 23, 22, 25, 22, 22, 25, 26, 25, 25, 26, 27, 26, 26, 27, 28, 27, 27, 28, 29, 28, 28, 29, 30, 29, 29, 30, 31, 30, 30, 31, 32, 31, 31, 32, 23, 32, 32, 23, 22, 23, 23, 22, 25, 22, 22, 25, 26, 25, 25, 26, 27, 26, 26, 27, 28, 27, 27, 28, 29, 28, 28, 29, 30, 29, 29, 30, 31, 30, 30, 31, 32, 31, 31, 32, 23, 32, 32, 23]
                float3 xformOp:rotateXYZ = (-90, 90, 0)
                float3 xformOp:scale = (0.7345581, 0.7345581, 0.7345581)
                double3 xformOp:translate = (6.979489890406886, 0.518650686261112, -2.1993458934649674)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }

    def Scope "Looks"
    {
        def Material "PaintSG"
        {
            color3f inputs:displayColor = (0.13320851, 0, 0)
            float inputs:displayOpacity
            color3f inputs:transparency
            token outputs:ri:surface.connect = </Fighters_Base/Looks/PaintSG/PaintSG_lambert.outputs:out>

            def Shader "PaintSG_lambert"
            {
                uniform token info:id = "PxrDiffuse"
                color3f inputs:diffuseColor.connect = </Fighters_Base/Looks/PaintSG.inputs:displayColor>
                color3f inputs:transmissionColor.connect = </Fighters_Base/Looks/PaintSG.inputs:transparency>
                token outputs:out
            }
        }

        def Material "Comonents_DarkSG"
        {
            color3f inputs:displayColor = (0.00035979215, 0.00035979215, 0.00035979215)
            float inputs:displayOpacity
            color3f inputs:transparency
            token outputs:ri:surface.connect = </Fighters_Base/Looks/Comonents_DarkSG/Comonents_DarkSG_lambert.outputs:out>

            def Shader "Comonents_DarkSG_lambert"
            {
                uniform token info:id = "PxrDiffuse"
                color3f inputs:diffuseColor.connect = </Fighters_Base/Looks/Comonents_DarkSG.inputs:displayColor>
                color3f inputs:transmissionColor.connect = </Fighters_Base/Looks/Comonents_DarkSG.inputs:transparency>
                token outputs:out
            }
        }

        def Material "Cockpit_WindowSG"
        {
            color3f inputs:displayColor = (0.011566324, 0.021502113, 0.02943908)
            float inputs:displayOpacity = 0.8811189
            color3f inputs:transparency = (0.009230992, 0.009230992, 0.009230992)
            token outputs:ri:surface.connect = </Fighters_Base/Looks/Cockpit_WindowSG/Cockpit_WindowSG_lambert.outputs:out>

            def Shader "Cockpit_WindowSG_lambert"
            {
                uniform token info:id = "PxrDiffuse"
                color3f inputs:diffuseColor.connect = </Fighters_Base/Looks/Cockpit_WindowSG.inputs:displayColor>
                color3f inputs:transmissionColor.connect = </Fighters_Base/Looks/Cockpit_WindowSG.inputs:transparency>
                token outputs:out
            }
        }

        def Material "ComponentsSG"
        {
            color3f inputs:displayColor = (0.0056499722, 0.0056499722, 0.0056499722)
            float inputs:displayOpacity
            color3f inputs:transparency
            token outputs:ri:surface.connect = </Fighters_Base/Looks/ComponentsSG/ComponentsSG_lambert.outputs:out>

            def Shader "ComponentsSG_lambert"
            {
                uniform token info:id = "PxrDiffuse"
                color3f inputs:diffuseColor.connect = </Fighters_Base/Looks/ComponentsSG.inputs:displayColor>
                color3f inputs:transmissionColor.connect = </Fighters_Base/Looks/ComponentsSG.inputs:transparency>
                token outputs:out
            }
        }
    }
}

